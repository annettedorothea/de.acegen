/*
 * generated by Xtext 2.29.0
 */
package de.acegen.serializer;

import com.google.inject.Inject;
import de.acegen.services.AceGenGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class AceGenSyntacticSequencer extends AbstractSyntacticSequencer {

	protected AceGenGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ClientAttribute_OptionsKeyword_10_2_0_q;
	protected AbstractElementAlias match_ClientAttribute___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q;
	protected AbstractElementAlias match_ClientAttribute___LeftCurlyBracketKeyword_10_0_OptionsKeyword_10_2_0_q___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q_RightCurlyBracketKeyword_10_4__q;
	protected AbstractElementAlias match_ClientModel___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q;
	protected AbstractElementAlias match_ClientScenario_GIVENKeyword_1_0_q;
	protected AbstractElementAlias match_ClientThenBlock_ExpectedStateKeyword_1_0_q;
	protected AbstractElementAlias match_ClientThenBlock_VerificationsKeyword_2_0_q;
	protected AbstractElementAlias match_ClientWhenBlock___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_2__q;
	protected AbstractElementAlias match_Count_CommaKeyword_3_0_q;
	protected AbstractElementAlias match_HttpClientOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q;
	protected AbstractElementAlias match_HttpClientOutcome___TriggersKeyword_3_0_LeftParenthesisKeyword_3_1_RightParenthesisKeyword_3_3__q;
	protected AbstractElementAlias match_HttpClient_ACEKeyword_1_0_q;
	protected AbstractElementAlias match_HttpClient_ModelsKeyword_4_0_q;
	protected AbstractElementAlias match_HttpClient_ScenariosKeyword_3_0_q;
	protected AbstractElementAlias match_HttpServerAceRead_PathParamsKeyword_7_0_q;
	protected AbstractElementAlias match_HttpServerAceRead_PayloadKeyword_9_0_q;
	protected AbstractElementAlias match_HttpServerAceRead_QueryParamsKeyword_8_0_q;
	protected AbstractElementAlias match_HttpServerAceRead_ResponseKeyword_10_0_q;
	protected AbstractElementAlias match_HttpServerAceWrite_PathParamsKeyword_8_0_q;
	protected AbstractElementAlias match_HttpServerAceWrite_PayloadKeyword_10_0_q;
	protected AbstractElementAlias match_HttpServerAceWrite_QueryParamsKeyword_9_0_q;
	protected AbstractElementAlias match_HttpServerAceWrite_ResponseKeyword_11_0_q;
	protected AbstractElementAlias match_HttpServerOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__a;
	protected AbstractElementAlias match_HttpServerOutcome___RightParenthesisKeyword_2_2_LeftParenthesisKeyword_2_0__a;
	protected AbstractElementAlias match_HttpServerView___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q;
	protected AbstractElementAlias match_HttpServer_ACEKeyword_10_0_q;
	protected AbstractElementAlias match_HttpServer_ModelsKeyword_12_0_q;
	protected AbstractElementAlias match_HttpServer_ScenariosKeyword_13_0_q;
	protected AbstractElementAlias match_HttpServer_ViewsKeyword_11_0_q;
	protected AbstractElementAlias match_JsonObject_JsonKeyword_1_0_q;
	protected AbstractElementAlias match_Model___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q;
	protected AbstractElementAlias match_Project___HttpClientKeyword_1_0_0_or_HttpServerKeyword_1_1_0__q;
	protected AbstractElementAlias match_Scenario_GIVENKeyword_1_0_q;
	protected AbstractElementAlias match_SelectByPrimaryKeys_CommaKeyword_3_0_q;
	protected AbstractElementAlias match_ThenBlock_PersistenceKeyword_2_0_q;
	protected AbstractElementAlias match_ThenBlock_VerificationsKeyword_3_0_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (AceGenGrammarAccess) access;
		match_ClientAttribute_OptionsKeyword_10_2_0_q = new TokenAlias(false, true, grammarAccess.getClientAttributeAccess().getOptionsKeyword_10_2_0());
		match_ClientAttribute___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getActionsKeyword_10_3_0()), new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getLeftCurlyBracketKeyword_10_3_1()), new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getRightCurlyBracketKeyword_10_3_3()));
		match_ClientAttribute___LeftCurlyBracketKeyword_10_0_OptionsKeyword_10_2_0_q___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q_RightCurlyBracketKeyword_10_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getLeftCurlyBracketKeyword_10_0()), new TokenAlias(false, true, grammarAccess.getClientAttributeAccess().getOptionsKeyword_10_2_0()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getActionsKeyword_10_3_0()), new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getLeftCurlyBracketKeyword_10_3_1()), new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getRightCurlyBracketKeyword_10_3_3())), new TokenAlias(false, false, grammarAccess.getClientAttributeAccess().getRightCurlyBracketKeyword_10_4()));
		match_ClientModel___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getClientModelAccess().getLeftCurlyBracketKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getClientModelAccess().getRightCurlyBracketKeyword_2_2()));
		match_ClientScenario_GIVENKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getClientScenarioAccess().getGIVENKeyword_1_0());
		match_ClientThenBlock_ExpectedStateKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getClientThenBlockAccess().getExpectedStateKeyword_1_0());
		match_ClientThenBlock_VerificationsKeyword_2_0_q = new TokenAlias(false, true, grammarAccess.getClientThenBlockAccess().getVerificationsKeyword_2_0());
		match_ClientWhenBlock___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getClientWhenBlockAccess().getLeftParenthesisKeyword_1_0()), new TokenAlias(false, false, grammarAccess.getClientWhenBlockAccess().getRightParenthesisKeyword_1_2()));
		match_Count_CommaKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getCountAccess().getCommaKeyword_3_0());
		match_HttpClientOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHttpClientOutcomeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHttpClientOutcomeAccess().getRightParenthesisKeyword_2_2()));
		match_HttpClientOutcome___TriggersKeyword_3_0_LeftParenthesisKeyword_3_1_RightParenthesisKeyword_3_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHttpClientOutcomeAccess().getTriggersKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHttpClientOutcomeAccess().getLeftParenthesisKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHttpClientOutcomeAccess().getRightParenthesisKeyword_3_3()));
		match_HttpClient_ACEKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getHttpClientAccess().getACEKeyword_1_0());
		match_HttpClient_ModelsKeyword_4_0_q = new TokenAlias(false, true, grammarAccess.getHttpClientAccess().getModelsKeyword_4_0());
		match_HttpClient_ScenariosKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getHttpClientAccess().getScenariosKeyword_3_0());
		match_HttpServerAceRead_PathParamsKeyword_7_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceReadAccess().getPathParamsKeyword_7_0());
		match_HttpServerAceRead_PayloadKeyword_9_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceReadAccess().getPayloadKeyword_9_0());
		match_HttpServerAceRead_QueryParamsKeyword_8_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceReadAccess().getQueryParamsKeyword_8_0());
		match_HttpServerAceRead_ResponseKeyword_10_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceReadAccess().getResponseKeyword_10_0());
		match_HttpServerAceWrite_PathParamsKeyword_8_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceWriteAccess().getPathParamsKeyword_8_0());
		match_HttpServerAceWrite_PayloadKeyword_10_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceWriteAccess().getPayloadKeyword_10_0());
		match_HttpServerAceWrite_QueryParamsKeyword_9_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceWriteAccess().getQueryParamsKeyword_9_0());
		match_HttpServerAceWrite_ResponseKeyword_11_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAceWriteAccess().getResponseKeyword_11_0());
		match_HttpServerOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getHttpServerOutcomeAccess().getLeftParenthesisKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHttpServerOutcomeAccess().getRightParenthesisKeyword_2_2()));
		match_HttpServerOutcome___RightParenthesisKeyword_2_2_LeftParenthesisKeyword_2_0__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getHttpServerOutcomeAccess().getRightParenthesisKeyword_2_2()), new TokenAlias(false, false, grammarAccess.getHttpServerOutcomeAccess().getLeftParenthesisKeyword_2_0()));
		match_HttpServerView___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHttpServerViewAccess().getLeftCurlyBracketKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHttpServerViewAccess().getRightCurlyBracketKeyword_2_2()));
		match_HttpServer_ACEKeyword_10_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAccess().getACEKeyword_10_0());
		match_HttpServer_ModelsKeyword_12_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAccess().getModelsKeyword_12_0());
		match_HttpServer_ScenariosKeyword_13_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAccess().getScenariosKeyword_13_0());
		match_HttpServer_ViewsKeyword_11_0_q = new TokenAlias(false, true, grammarAccess.getHttpServerAccess().getViewsKeyword_11_0());
		match_JsonObject_JsonKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getJsonObjectAccess().getJsonKeyword_1_0());
		match_Model___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_2()));
		match_Project___HttpClientKeyword_1_0_0_or_HttpServerKeyword_1_1_0__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getProjectAccess().getHttpClientKeyword_1_0_0()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getHttpServerKeyword_1_1_0()));
		match_Scenario_GIVENKeyword_1_0_q = new TokenAlias(false, true, grammarAccess.getScenarioAccess().getGIVENKeyword_1_0());
		match_SelectByPrimaryKeys_CommaKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getSelectByPrimaryKeysAccess().getCommaKeyword_3_0());
		match_ThenBlock_PersistenceKeyword_2_0_q = new TokenAlias(false, true, grammarAccess.getThenBlockAccess().getPersistenceKeyword_2_0());
		match_ThenBlock_VerificationsKeyword_3_0_q = new TokenAlias(false, true, grammarAccess.getThenBlockAccess().getVerificationsKeyword_3_0());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ClientAttribute_OptionsKeyword_10_2_0_q.equals(syntax))
				emit_ClientAttribute_OptionsKeyword_10_2_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientAttribute___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q.equals(syntax))
				emit_ClientAttribute___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientAttribute___LeftCurlyBracketKeyword_10_0_OptionsKeyword_10_2_0_q___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q_RightCurlyBracketKeyword_10_4__q.equals(syntax))
				emit_ClientAttribute___LeftCurlyBracketKeyword_10_0_OptionsKeyword_10_2_0_q___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q_RightCurlyBracketKeyword_10_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientModel___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q.equals(syntax))
				emit_ClientModel___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientScenario_GIVENKeyword_1_0_q.equals(syntax))
				emit_ClientScenario_GIVENKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientThenBlock_ExpectedStateKeyword_1_0_q.equals(syntax))
				emit_ClientThenBlock_ExpectedStateKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientThenBlock_VerificationsKeyword_2_0_q.equals(syntax))
				emit_ClientThenBlock_VerificationsKeyword_2_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ClientWhenBlock___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_2__q.equals(syntax))
				emit_ClientWhenBlock___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Count_CommaKeyword_3_0_q.equals(syntax))
				emit_Count_CommaKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpClientOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q.equals(syntax))
				emit_HttpClientOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpClientOutcome___TriggersKeyword_3_0_LeftParenthesisKeyword_3_1_RightParenthesisKeyword_3_3__q.equals(syntax))
				emit_HttpClientOutcome___TriggersKeyword_3_0_LeftParenthesisKeyword_3_1_RightParenthesisKeyword_3_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpClient_ACEKeyword_1_0_q.equals(syntax))
				emit_HttpClient_ACEKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpClient_ModelsKeyword_4_0_q.equals(syntax))
				emit_HttpClient_ModelsKeyword_4_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpClient_ScenariosKeyword_3_0_q.equals(syntax))
				emit_HttpClient_ScenariosKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceRead_PathParamsKeyword_7_0_q.equals(syntax))
				emit_HttpServerAceRead_PathParamsKeyword_7_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceRead_PayloadKeyword_9_0_q.equals(syntax))
				emit_HttpServerAceRead_PayloadKeyword_9_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceRead_QueryParamsKeyword_8_0_q.equals(syntax))
				emit_HttpServerAceRead_QueryParamsKeyword_8_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceRead_ResponseKeyword_10_0_q.equals(syntax))
				emit_HttpServerAceRead_ResponseKeyword_10_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceWrite_PathParamsKeyword_8_0_q.equals(syntax))
				emit_HttpServerAceWrite_PathParamsKeyword_8_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceWrite_PayloadKeyword_10_0_q.equals(syntax))
				emit_HttpServerAceWrite_PayloadKeyword_10_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceWrite_QueryParamsKeyword_9_0_q.equals(syntax))
				emit_HttpServerAceWrite_QueryParamsKeyword_9_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerAceWrite_ResponseKeyword_11_0_q.equals(syntax))
				emit_HttpServerAceWrite_ResponseKeyword_11_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__a.equals(syntax))
				emit_HttpServerOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerOutcome___RightParenthesisKeyword_2_2_LeftParenthesisKeyword_2_0__a.equals(syntax))
				emit_HttpServerOutcome___RightParenthesisKeyword_2_2_LeftParenthesisKeyword_2_0__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServerView___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q.equals(syntax))
				emit_HttpServerView___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServer_ACEKeyword_10_0_q.equals(syntax))
				emit_HttpServer_ACEKeyword_10_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServer_ModelsKeyword_12_0_q.equals(syntax))
				emit_HttpServer_ModelsKeyword_12_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServer_ScenariosKeyword_13_0_q.equals(syntax))
				emit_HttpServer_ScenariosKeyword_13_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HttpServer_ViewsKeyword_11_0_q.equals(syntax))
				emit_HttpServer_ViewsKeyword_11_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_JsonObject_JsonKeyword_1_0_q.equals(syntax))
				emit_JsonObject_JsonKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Model___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q.equals(syntax))
				emit_Model___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Project___HttpClientKeyword_1_0_0_or_HttpServerKeyword_1_1_0__q.equals(syntax))
				emit_Project___HttpClientKeyword_1_0_0_or_HttpServerKeyword_1_1_0__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Scenario_GIVENKeyword_1_0_q.equals(syntax))
				emit_Scenario_GIVENKeyword_1_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SelectByPrimaryKeys_CommaKeyword_3_0_q.equals(syntax))
				emit_SelectByPrimaryKeys_CommaKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ThenBlock_PersistenceKeyword_2_0_q.equals(syntax))
				emit_ThenBlock_PersistenceKeyword_2_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ThenBlock_VerificationsKeyword_3_0_q.equals(syntax))
				emit_ThenBlock_VerificationsKeyword_3_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'options'?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributes+=ClientAttribute (ambiguity) 'actions' '{' actions+=UiAction
	 *     attributes+=ClientAttribute (ambiguity) ('actions' '{' '}')? '}' (rule end)
	 *     fromParent?='fromParent' '{' (ambiguity) 'actions' '{' actions+=UiAction
	 *     location?='location' '{' (ambiguity) 'actions' '{' actions+=UiAction
	 *     name=ID '{' (ambiguity) 'actions' '{' actions+=UiAction
	 *     storage?='storage' '{' (ambiguity) 'actions' '{' actions+=UiAction
	 *     uiElement=UIElement '{' (ambiguity) 'actions' '{' actions+=UiAction
	 
	 * </pre>
	 */
	protected void emit_ClientAttribute_OptionsKeyword_10_2_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('actions' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributes+=ClientAttribute 'options'? (ambiguity) '}' (rule end)
	 *     options+=STRING (ambiguity) '}' (rule end)
	 
	 * </pre>
	 */
	protected void emit_ClientAttribute___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' 'options'? ('actions' '{' '}')? '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     fromParent?='fromParent' (ambiguity) (rule end)
	 *     location?='location' (ambiguity) (rule end)
	 *     name=ID (ambiguity) (rule end)
	 *     storage?='storage' (ambiguity) (rule end)
	 *     uiElement=UIElement (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ClientAttribute___LeftCurlyBracketKeyword_10_0_OptionsKeyword_10_2_0_q___ActionsKeyword_10_3_0_LeftCurlyBracketKeyword_10_3_1_RightCurlyBracketKeyword_10_3_3__q_RightCurlyBracketKeyword_10_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     superModels+=[ClientModel|QualifiedName] (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ClientModel___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'GIVEN'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) clientWhenThen+=ClientWhenThen
	 
	 * </pre>
	 */
	protected void emit_ClientScenario_GIVENKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'expectedState'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'verifications' verifications+=CustomVerification
	 *     (rule start) (ambiguity) 'verifications'? (rule start)
	 
	 * </pre>
	 */
	protected void emit_ClientThenBlock_ExpectedStateKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'verifications'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'expectedState'? (ambiguity) (rule start)
	 *     stateVerifications+=StateVerification (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ClientThenBlock_VerificationsKeyword_2_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     action=[HttpClientAce|QualifiedName] (ambiguity) 'squishyValues' squishyValues+=SquishyValue
	 *     action=[HttpClientAce|QualifiedName] (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ClientWhenBlock___LeftParenthesisKeyword_1_0_RightParenthesisKeyword_1_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributeAndValues+=AttributeAndValue (ambiguity) ')' 'shouldBe' expected=INT
	 
	 * </pre>
	 */
	protected void emit_Count_CommaKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) 'triggers' '(' triggerdAceOperations+=TriggerdAceOperation
	 *     name=ID (ambiguity) ('triggers' '(' ')')? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpClientOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('triggers' '(' ')')?
	 *
	 * This ambiguous syntax occurs at:
	 *     listeners+=HttpClientStateFunction ')' (ambiguity) (rule end)
	 *     name=ID ('(' ')')? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpClientOutcome___TriggersKeyword_3_0_LeftParenthesisKeyword_3_1_RightParenthesisKeyword_3_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'ACE'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=QualifiedName (ambiguity) 'scenarios' scenarios+=ClientScenario
	 *     name=QualifiedName (ambiguity) 'scenarios'? 'models' models+=ClientModel
	 *     name=QualifiedName (ambiguity) 'scenarios'? 'models'? (rule end)
	 *     name=QualifiedName (ambiguity) 'ui' container=ClientAttribute
	 *     name=QualifiedName (ambiguity) 'ui' jsx?='JSX'
	 
	 * </pre>
	 */
	protected void emit_HttpClient_ACEKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'models'?
	 *
	 * This ambiguous syntax occurs at:
	 *     aceOperations+=HttpClientAce 'scenarios'? (ambiguity) (rule end)
	 *     container=ClientAttribute 'scenarios'? (ambiguity) (rule end)
	 *     name=QualifiedName 'ACE'? 'scenarios'? (ambiguity) (rule end)
	 *     scenarios+=ClientScenario (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpClient_ModelsKeyword_4_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'scenarios'?
	 *
	 * This ambiguous syntax occurs at:
	 *     aceOperations+=HttpClientAce (ambiguity) 'models' models+=ClientModel
	 *     aceOperations+=HttpClientAce (ambiguity) 'models'? (rule end)
	 *     container=ClientAttribute (ambiguity) 'models' models+=ClientModel
	 *     container=ClientAttribute (ambiguity) 'models'? (rule end)
	 *     name=QualifiedName 'ACE'? (ambiguity) 'models' models+=ClientModel
	 *     name=QualifiedName 'ACE'? (ambiguity) 'models'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpClient_ScenariosKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'pathParams'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' (ambiguity) 'queryParams' queryParams+=AttributeParamRef
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload' payload+=AttributeParamRef
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload'? 'response'? (rule end)
	 *     url=STRING (ambiguity) 'queryParams' queryParams+=AttributeParamRef
	 *     url=STRING (ambiguity) 'queryParams'? 'payload' payload+=AttributeParamRef
	 *     url=STRING (ambiguity) 'queryParams'? 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING (ambiguity) 'queryParams'? 'payload'? 'response'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceRead_PathParamsKeyword_7_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'payload'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     pathParams+=AttributeParamRef 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     pathParams+=AttributeParamRef 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     queryParams+=AttributeParamRef (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     queryParams+=AttributeParamRef (ambiguity) 'response'? (rule end)
	 *     url=STRING 'pathParams'? 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING 'pathParams'? 'queryParams'? (ambiguity) 'response'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceRead_PayloadKeyword_9_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'queryParams'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload' payload+=AttributeParamRef
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload'? 'response'? (rule end)
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload' payload+=AttributeParamRef
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload'? 'response'? (rule end)
	 *     url=STRING 'pathParams'? (ambiguity) 'payload' payload+=AttributeParamRef
	 *     url=STRING 'pathParams'? (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING 'pathParams'? (ambiguity) 'payload'? 'response'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceRead_QueryParamsKeyword_8_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'response'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     pathParams+=AttributeParamRef 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     payload+=AttributeParamRef (ambiguity) (rule end)
	 *     queryParams+=AttributeParamRef 'payload'? (ambiguity) (rule end)
	 *     url=STRING 'pathParams'? 'queryParams'? 'payload'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceRead_ResponseKeyword_10_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'pathParams'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' (ambiguity) 'queryParams' queryParams+=AttributeParamRef
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload' payload+=AttributeParamRef
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload'? 'response'? (rule end)
	 *     authorize?='authorize' (ambiguity) 'queryParams'? 'payload'? 'response'? outcomes+=HttpServerOutcome
	 *     multipartFormData?='multipartFormData' (ambiguity) 'queryParams' queryParams+=AttributeParamRef
	 *     multipartFormData?='multipartFormData' (ambiguity) 'queryParams'? 'payload' payload+=AttributeParamRef
	 *     multipartFormData?='multipartFormData' (ambiguity) 'queryParams'? 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     multipartFormData?='multipartFormData' (ambiguity) 'queryParams'? 'payload'? 'response'? (rule end)
	 *     multipartFormData?='multipartFormData' (ambiguity) 'queryParams'? 'payload'? 'response'? outcomes+=HttpServerOutcome
	 *     url=STRING (ambiguity) 'queryParams' queryParams+=AttributeParamRef
	 *     url=STRING (ambiguity) 'queryParams'? 'payload' payload+=AttributeParamRef
	 *     url=STRING (ambiguity) 'queryParams'? 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING (ambiguity) 'queryParams'? 'payload'? 'response'? (rule end)
	 *     url=STRING (ambiguity) 'queryParams'? 'payload'? 'response'? outcomes+=HttpServerOutcome
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceWrite_PathParamsKeyword_8_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'payload'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? (ambiguity) 'response'? outcomes+=HttpServerOutcome
	 *     multipartFormData?='multipartFormData' 'pathParams'? 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     multipartFormData?='multipartFormData' 'pathParams'? 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     multipartFormData?='multipartFormData' 'pathParams'? 'queryParams'? (ambiguity) 'response'? outcomes+=HttpServerOutcome
	 *     pathParams+=AttributeParamRef 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     pathParams+=AttributeParamRef 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     pathParams+=AttributeParamRef 'queryParams'? (ambiguity) 'response'? outcomes+=HttpServerOutcome
	 *     queryParams+=AttributeParamRef (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     queryParams+=AttributeParamRef (ambiguity) 'response'? (rule end)
	 *     queryParams+=AttributeParamRef (ambiguity) 'response'? outcomes+=HttpServerOutcome
	 *     url=STRING 'pathParams'? 'queryParams'? (ambiguity) 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING 'pathParams'? 'queryParams'? (ambiguity) 'response'? (rule end)
	 *     url=STRING 'pathParams'? 'queryParams'? (ambiguity) 'response'? outcomes+=HttpServerOutcome
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceWrite_PayloadKeyword_10_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'queryParams'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload' payload+=AttributeParamRef
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload'? 'response'? (rule end)
	 *     authorize?='authorize' 'pathParams'? (ambiguity) 'payload'? 'response'? outcomes+=HttpServerOutcome
	 *     multipartFormData?='multipartFormData' 'pathParams'? (ambiguity) 'payload' payload+=AttributeParamRef
	 *     multipartFormData?='multipartFormData' 'pathParams'? (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     multipartFormData?='multipartFormData' 'pathParams'? (ambiguity) 'payload'? 'response'? (rule end)
	 *     multipartFormData?='multipartFormData' 'pathParams'? (ambiguity) 'payload'? 'response'? outcomes+=HttpServerOutcome
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload' payload+=AttributeParamRef
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload'? 'response'? (rule end)
	 *     pathParams+=AttributeParamRef (ambiguity) 'payload'? 'response'? outcomes+=HttpServerOutcome
	 *     url=STRING 'pathParams'? (ambiguity) 'payload' payload+=AttributeParamRef
	 *     url=STRING 'pathParams'? (ambiguity) 'payload'? 'response' response+=[Attribute|QualifiedName]
	 *     url=STRING 'pathParams'? (ambiguity) 'payload'? 'response'? (rule end)
	 *     url=STRING 'pathParams'? (ambiguity) 'payload'? 'response'? outcomes+=HttpServerOutcome
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceWrite_QueryParamsKeyword_9_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'response'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     authorize?='authorize' 'pathParams'? 'queryParams'? 'payload'? (ambiguity) outcomes+=HttpServerOutcome
	 *     multipartFormData?='multipartFormData' 'pathParams'? 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     multipartFormData?='multipartFormData' 'pathParams'? 'queryParams'? 'payload'? (ambiguity) outcomes+=HttpServerOutcome
	 *     pathParams+=AttributeParamRef 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     pathParams+=AttributeParamRef 'queryParams'? 'payload'? (ambiguity) outcomes+=HttpServerOutcome
	 *     payload+=AttributeParamRef (ambiguity) (rule end)
	 *     payload+=AttributeParamRef (ambiguity) outcomes+=HttpServerOutcome
	 *     queryParams+=AttributeParamRef 'payload'? (ambiguity) (rule end)
	 *     queryParams+=AttributeParamRef 'payload'? (ambiguity) outcomes+=HttpServerOutcome
	 *     url=STRING 'pathParams'? 'queryParams'? 'payload'? (ambiguity) (rule end)
	 *     url=STRING 'pathParams'? 'queryParams'? 'payload'? (ambiguity) outcomes+=HttpServerOutcome
	 
	 * </pre>
	 */
	protected void emit_HttpServerAceWrite_ResponseKeyword_11_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('(' ')')*
	 *
	 * This ambiguous syntax occurs at:
	 *     listeners+=[HttpServerViewFunction|QualifiedName] ')' (ambiguity) (rule end)
	 *     name=ID (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerOutcome___LeftParenthesisKeyword_2_0_RightParenthesisKeyword_2_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (')' '(')*
	 *
	 * This ambiguous syntax occurs at:
	 *     listeners+=[HttpServerViewFunction|QualifiedName] (ambiguity) listeners+=[HttpServerViewFunction|QualifiedName]
	 *     name=ID '(' (ambiguity) listeners+=[HttpServerViewFunction|QualifiedName]
	 
	 * </pre>
	 */
	protected void emit_HttpServerOutcome___RightParenthesisKeyword_2_2_LeftParenthesisKeyword_2_0__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServerView___LeftCurlyBracketKeyword_2_0_RightCurlyBracketKeyword_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'ACE'?
	 *
	 * This ambiguous syntax occurs at:
	 *     authUser=AuthUser (ambiguity) 'views' views+=HttpServerView
	 *     authUser=AuthUser (ambiguity) 'views'? 'models' models+=Model
	 *     authUser=AuthUser (ambiguity) 'views'? 'models'? 'scenarios' scenarios+=Scenario
	 *     authUser=AuthUser (ambiguity) 'views'? 'models'? 'scenarios'? (rule end)
	 *     authUserRef=[AuthUser|QualifiedName] (ambiguity) 'views' views+=HttpServerView
	 *     authUserRef=[AuthUser|QualifiedName] (ambiguity) 'views'? 'models' models+=Model
	 *     authUserRef=[AuthUser|QualifiedName] (ambiguity) 'views'? 'models'? 'scenarios' scenarios+=Scenario
	 *     authUserRef=[AuthUser|QualifiedName] (ambiguity) 'views'? 'models'? 'scenarios'? (rule end)
	 *     name=QualifiedName (ambiguity) 'views' views+=HttpServerView
	 *     name=QualifiedName (ambiguity) 'views'? 'models' models+=Model
	 *     name=QualifiedName (ambiguity) 'views'? 'models'? 'scenarios' scenarios+=Scenario
	 *     name=QualifiedName (ambiguity) 'views'? 'models'? 'scenarios'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServer_ACEKeyword_10_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'models'?
	 *
	 * This ambiguous syntax occurs at:
	 *     aceOperations+=HttpServerAce 'views'? (ambiguity) 'scenarios' scenarios+=Scenario
	 *     aceOperations+=HttpServerAce 'views'? (ambiguity) 'scenarios'? (rule end)
	 *     authUser=AuthUser 'ACE'? 'views'? (ambiguity) 'scenarios' scenarios+=Scenario
	 *     authUser=AuthUser 'ACE'? 'views'? (ambiguity) 'scenarios'? (rule end)
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? 'views'? (ambiguity) 'scenarios' scenarios+=Scenario
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? 'views'? (ambiguity) 'scenarios'? (rule end)
	 *     name=QualifiedName 'ACE'? 'views'? (ambiguity) 'scenarios' scenarios+=Scenario
	 *     name=QualifiedName 'ACE'? 'views'? (ambiguity) 'scenarios'? (rule end)
	 *     views+=HttpServerView (ambiguity) 'scenarios' scenarios+=Scenario
	 *     views+=HttpServerView (ambiguity) 'scenarios'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServer_ModelsKeyword_12_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'scenarios'?
	 *
	 * This ambiguous syntax occurs at:
	 *     aceOperations+=HttpServerAce 'views'? 'models'? (ambiguity) (rule end)
	 *     authUser=AuthUser 'ACE'? 'views'? 'models'? (ambiguity) (rule end)
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? 'views'? 'models'? (ambiguity) (rule end)
	 *     models+=Model (ambiguity) (rule end)
	 *     name=QualifiedName 'ACE'? 'views'? 'models'? (ambiguity) (rule end)
	 *     views+=HttpServerView 'models'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServer_ScenariosKeyword_13_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'views'?
	 *
	 * This ambiguous syntax occurs at:
	 *     aceOperations+=HttpServerAce (ambiguity) 'models' models+=Model
	 *     aceOperations+=HttpServerAce (ambiguity) 'models'? 'scenarios' scenarios+=Scenario
	 *     aceOperations+=HttpServerAce (ambiguity) 'models'? 'scenarios'? (rule end)
	 *     authUser=AuthUser 'ACE'? (ambiguity) 'models' models+=Model
	 *     authUser=AuthUser 'ACE'? (ambiguity) 'models'? 'scenarios' scenarios+=Scenario
	 *     authUser=AuthUser 'ACE'? (ambiguity) 'models'? 'scenarios'? (rule end)
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? (ambiguity) 'models' models+=Model
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? (ambiguity) 'models'? 'scenarios' scenarios+=Scenario
	 *     authUserRef=[AuthUser|QualifiedName] 'ACE'? (ambiguity) 'models'? 'scenarios'? (rule end)
	 *     name=QualifiedName 'ACE'? (ambiguity) 'models' models+=Model
	 *     name=QualifiedName 'ACE'? (ambiguity) 'models'? 'scenarios' scenarios+=Scenario
	 *     name=QualifiedName 'ACE'? (ambiguity) 'models'? 'scenarios'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_HttpServer_ViewsKeyword_11_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'json'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) string=STRING
	 
	 * </pre>
	 */
	protected void emit_JsonObject_JsonKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) (rule end)
	 *     superModels+=[Model|QualifiedName] (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_Model___LeftCurlyBracketKeyword_3_0_RightCurlyBracketKeyword_3_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('HttpClient' | 'HttpServer')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Project___HttpClientKeyword_1_0_0_or_HttpServerKeyword_1_1_0__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'GIVEN'?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) whenThen+=WhenThen
	 
	 * </pre>
	 */
	protected void emit_Scenario_GIVENKeyword_1_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributeAndValues+=AttributeAndValue (ambiguity) ')' 'shouldBe' expected=SelectByExpectation
	 
	 * </pre>
	 */
	protected void emit_SelectByPrimaryKeys_CommaKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'persistence'?
	 *
	 * This ambiguous syntax occurs at:
	 *     response=DataDefinition (ambiguity) 'verifications' verifications+=Verification
	 *     response=DataDefinition (ambiguity) 'verifications'? (rule end)
	 *     statusCode=INT (ambiguity) 'verifications' verifications+=Verification
	 *     statusCode=INT (ambiguity) 'verifications'? (rule end)
	 
	 * </pre>
	 */
	protected void emit_ThenBlock_PersistenceKeyword_2_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     'verifications'?
	 *
	 * This ambiguous syntax occurs at:
	 *     persistenceVerifications+=PersistenceVerification (ambiguity) (rule end)
	 *     response=DataDefinition 'persistence'? (ambiguity) (rule end)
	 *     statusCode=INT 'persistence'? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_ThenBlock_VerificationsKeyword_3_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
