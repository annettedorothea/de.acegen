/*
 * generated by Xtext 2.29.0
 */
package de.acegen.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AceGenGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cHttpClientKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cHttpClientAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cHttpClientHttpClientParserRuleCall_1_0_1_0 = (RuleCall)cHttpClientAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cHttpServerKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cHttpServerAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cHttpServerHttpServerParserRuleCall_1_1_1_0 = (RuleCall)cHttpServerAssignment_1_1_1.eContents().get(0);
		
		//Project: {Project}
		//    ('HttpClient' httpClient = HttpClient ? | 'HttpServer' httpServer = HttpServer ?)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Project}
		//   ('HttpClient' httpClient = HttpClient ? | 'HttpServer' httpServer = HttpServer ?)?
		public Group getGroup() { return cGroup; }
		
		//{Project}
		public Action getProjectAction_0() { return cProjectAction_0; }
		
		//('HttpClient' httpClient = HttpClient ? | 'HttpServer' httpServer = HttpServer ?)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'HttpClient' httpClient = HttpClient ?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'HttpClient'
		public Keyword getHttpClientKeyword_1_0_0() { return cHttpClientKeyword_1_0_0; }
		
		//httpClient = HttpClient ?
		public Assignment getHttpClientAssignment_1_0_1() { return cHttpClientAssignment_1_0_1; }
		
		//HttpClient
		public RuleCall getHttpClientHttpClientParserRuleCall_1_0_1_0() { return cHttpClientHttpClientParserRuleCall_1_0_1_0; }
		
		//'HttpServer' httpServer = HttpServer ?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'HttpServer'
		public Keyword getHttpServerKeyword_1_1_0() { return cHttpServerKeyword_1_1_0; }
		
		//httpServer = HttpServer ?
		public Assignment getHttpServerAssignment_1_1_1() { return cHttpServerAssignment_1_1_1; }
		
		//HttpServer
		public RuleCall getHttpServerHttpServerParserRuleCall_1_1_1_0() { return cHttpServerHttpServerParserRuleCall_1_1_1_0; }
	}
	public class HttpClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQualifiedNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cACEKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAceOperationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAceOperationsHttpClientAceParserRuleCall_1_1_0 = (RuleCall)cAceOperationsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUiKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cJsxAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cJsxJSXKeyword_2_1_0 = (Keyword)cJsxAssignment_2_1.eContents().get(0);
		private final Assignment cContainerAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cContainerClientAttributeParserRuleCall_2_2_0 = (RuleCall)cContainerAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cScenariosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cScenariosAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cScenariosClientScenarioParserRuleCall_3_1_0 = (RuleCall)cScenariosAssignment_3_1.eContents().get(0);
		
		//HttpClient:
		//    name = QualifiedName
		//    ('ACE' (aceOperations += HttpClientAce)*)?
		//    ('ui' (jsx ?= 'JSX')?
		//        container = ClientAttribute
		//    )?
		//    ('scenarios' (scenarios += ClientScenario)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = QualifiedName
		//('ACE' (aceOperations += HttpClientAce)*)?
		//('ui' (jsx ?= 'JSX')?
		//    container = ClientAttribute
		//)?
		//('scenarios' (scenarios += ClientScenario)*)?
		public Group getGroup() { return cGroup; }
		
		//name = QualifiedName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0_0() { return cNameQualifiedNameParserRuleCall_0_0; }
		
		//('ACE' (aceOperations += HttpClientAce)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'ACE'
		public Keyword getACEKeyword_1_0() { return cACEKeyword_1_0; }
		
		//(aceOperations += HttpClientAce)*
		public Assignment getAceOperationsAssignment_1_1() { return cAceOperationsAssignment_1_1; }
		
		//HttpClientAce
		public RuleCall getAceOperationsHttpClientAceParserRuleCall_1_1_0() { return cAceOperationsHttpClientAceParserRuleCall_1_1_0; }
		
		//('ui' (jsx ?= 'JSX')?
		//    container = ClientAttribute
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'ui'
		public Keyword getUiKeyword_2_0() { return cUiKeyword_2_0; }
		
		//(jsx ?= 'JSX')?
		public Assignment getJsxAssignment_2_1() { return cJsxAssignment_2_1; }
		
		//'JSX'
		public Keyword getJsxJSXKeyword_2_1_0() { return cJsxJSXKeyword_2_1_0; }
		
		//container = ClientAttribute
		public Assignment getContainerAssignment_2_2() { return cContainerAssignment_2_2; }
		
		//ClientAttribute
		public RuleCall getContainerClientAttributeParserRuleCall_2_2_0() { return cContainerClientAttributeParserRuleCall_2_2_0; }
		
		//('scenarios' (scenarios += ClientScenario)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'scenarios'
		public Keyword getScenariosKeyword_3_0() { return cScenariosKeyword_3_0; }
		
		//(scenarios += ClientScenario)*
		public Assignment getScenariosAssignment_3_1() { return cScenariosAssignment_3_1; }
		
		//ClientScenario
		public RuleCall getScenariosClientScenarioParserRuleCall_3_1_0() { return cScenariosClientScenarioParserRuleCall_3_1_0; }
	}
	public class HttpClientAceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientAce");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAsyncAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAsyncAsyncKeyword_0_0 = (Keyword)cAsyncAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInputAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInputInputParserRuleCall_2_1_0 = (RuleCall)cInputAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cInputAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cInputInputParserRuleCall_2_2_1_0 = (RuleCall)cInputAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromAppStateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRefsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRefsFromAppStateRefParserRuleCall_3_2_0 = (RuleCall)cRefsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRefsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cRefsFromAppStateRefParserRuleCall_3_3_1_0 = (RuleCall)cRefsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCallKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cServerCallAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cServerCallHttpServerAceCrossReference_4_1_0 = (CrossReference)cServerCallAssignment_4_1.eContents().get(0);
		private final RuleCall cServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cServerCallHttpServerAceCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSetKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLoadingKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLoadingIndicatorsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cLoadingIndicatorsClientAttributeCrossReference_5_2_0 = (CrossReference)cLoadingIndicatorsAssignment_5_2.eContents().get(0);
		private final RuleCall cLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_2_0_1 = (RuleCall)cLoadingIndicatorsClientAttributeCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLoadingIndicatorsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cLoadingIndicatorsClientAttributeCrossReference_5_3_1_0 = (CrossReference)cLoadingIndicatorsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_3_1_0_1 = (RuleCall)cLoadingIndicatorsClientAttributeCrossReference_5_3_1_0.eContents().get(1);
		private final Assignment cOutcomesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOutcomesHttpClientOutcomeParserRuleCall_6_0 = (RuleCall)cOutcomesAssignment_6.eContents().get(0);
		
		//HttpClientAce:
		//    (async ?= 'async')? name = ID
		//        ('(' input += Input (',' input += Input)* ')' )?
		//        ('fromAppState' '(' refs += FromAppStateRef (',' refs += FromAppStateRef)* ')' )?
		//    ('call' serverCall = [HttpServerAce | QualifiedName] )?
		//    ('set' 'loading' loadingIndicators += [ClientAttribute | QualifiedName] (',' loadingIndicators += [ClientAttribute | QualifiedName])* )?
		//    (outcomes += HttpClientOutcome)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(async ?= 'async')? name = ID
		//    ('(' input += Input (',' input += Input)* ')' )?
		//    ('fromAppState' '(' refs += FromAppStateRef (',' refs += FromAppStateRef)* ')' )?
		//('call' serverCall = [HttpServerAce | QualifiedName] )?
		//('set' 'loading' loadingIndicators += [ClientAttribute | QualifiedName] (',' loadingIndicators += [ClientAttribute | QualifiedName])* )?
		//(outcomes += HttpClientOutcome)*
		public Group getGroup() { return cGroup; }
		
		//(async ?= 'async')?
		public Assignment getAsyncAssignment_0() { return cAsyncAssignment_0; }
		
		//'async'
		public Keyword getAsyncAsyncKeyword_0_0() { return cAsyncAsyncKeyword_0_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' input += Input (',' input += Input)* ')' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//input += Input
		public Assignment getInputAssignment_2_1() { return cInputAssignment_2_1; }
		
		//Input
		public RuleCall getInputInputParserRuleCall_2_1_0() { return cInputInputParserRuleCall_2_1_0; }
		
		//(',' input += Input)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//input += Input
		public Assignment getInputAssignment_2_2_1() { return cInputAssignment_2_2_1; }
		
		//Input
		public RuleCall getInputInputParserRuleCall_2_2_1_0() { return cInputInputParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//('fromAppState' '(' refs += FromAppStateRef (',' refs += FromAppStateRef)* ')' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'fromAppState'
		public Keyword getFromAppStateKeyword_3_0() { return cFromAppStateKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//refs += FromAppStateRef
		public Assignment getRefsAssignment_3_2() { return cRefsAssignment_3_2; }
		
		//FromAppStateRef
		public RuleCall getRefsFromAppStateRefParserRuleCall_3_2_0() { return cRefsFromAppStateRefParserRuleCall_3_2_0; }
		
		//(',' refs += FromAppStateRef)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//','
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//refs += FromAppStateRef
		public Assignment getRefsAssignment_3_3_1() { return cRefsAssignment_3_3_1; }
		
		//FromAppStateRef
		public RuleCall getRefsFromAppStateRefParserRuleCall_3_3_1_0() { return cRefsFromAppStateRefParserRuleCall_3_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('call' serverCall = [HttpServerAce | QualifiedName] )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'call'
		public Keyword getCallKeyword_4_0() { return cCallKeyword_4_0; }
		
		//serverCall = [HttpServerAce | QualifiedName]
		public Assignment getServerCallAssignment_4_1() { return cServerCallAssignment_4_1; }
		
		//[HttpServerAce | QualifiedName]
		public CrossReference getServerCallHttpServerAceCrossReference_4_1_0() { return cServerCallHttpServerAceCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1() { return cServerCallHttpServerAceQualifiedNameParserRuleCall_4_1_0_1; }
		
		//('set' 'loading' loadingIndicators += [ClientAttribute | QualifiedName] (',' loadingIndicators += [ClientAttribute | QualifiedName])* )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'set'
		public Keyword getSetKeyword_5_0() { return cSetKeyword_5_0; }
		
		//'loading'
		public Keyword getLoadingKeyword_5_1() { return cLoadingKeyword_5_1; }
		
		//loadingIndicators += [ClientAttribute | QualifiedName]
		public Assignment getLoadingIndicatorsAssignment_5_2() { return cLoadingIndicatorsAssignment_5_2; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getLoadingIndicatorsClientAttributeCrossReference_5_2_0() { return cLoadingIndicatorsClientAttributeCrossReference_5_2_0; }
		
		//QualifiedName
		public RuleCall getLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_2_0_1() { return cLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_2_0_1; }
		
		//(',' loadingIndicators += [ClientAttribute | QualifiedName])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//','
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//loadingIndicators += [ClientAttribute | QualifiedName]
		public Assignment getLoadingIndicatorsAssignment_5_3_1() { return cLoadingIndicatorsAssignment_5_3_1; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getLoadingIndicatorsClientAttributeCrossReference_5_3_1_0() { return cLoadingIndicatorsClientAttributeCrossReference_5_3_1_0; }
		
		//QualifiedName
		public RuleCall getLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_3_1_0_1() { return cLoadingIndicatorsClientAttributeQualifiedNameParserRuleCall_5_3_1_0_1; }
		
		//(outcomes += HttpClientOutcome)*
		public Assignment getOutcomesAssignment_6() { return cOutcomesAssignment_6; }
		
		//HttpClientOutcome
		public RuleCall getOutcomesHttpClientOutcomeParserRuleCall_6_0() { return cOutcomesHttpClientOutcomeParserRuleCall_6_0; }
	}
	public class FromAppStateRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.FromAppStateRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStateElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cStateElementClientAttributeCrossReference_0_0 = (CrossReference)cStateElementAssignment_0.eContents().get(0);
		private final RuleCall cStateElementClientAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cStateElementClientAttributeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cVarNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cVarNameIDTerminalRuleCall_1_1_0 = (RuleCall)cVarNameAssignment_1_1.eContents().get(0);
		
		//FromAppStateRef:
		//    stateElement = [ClientAttribute | QualifiedName] ('as' varName = ID)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//stateElement = [ClientAttribute | QualifiedName] ('as' varName = ID)?
		public Group getGroup() { return cGroup; }
		
		//stateElement = [ClientAttribute | QualifiedName]
		public Assignment getStateElementAssignment_0() { return cStateElementAssignment_0; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getStateElementClientAttributeCrossReference_0_0() { return cStateElementClientAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getStateElementClientAttributeQualifiedNameParserRuleCall_0_0_1() { return cStateElementClientAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//('as' varName = ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'as'
		public Keyword getAsKeyword_1_0() { return cAsKeyword_1_0; }
		
		//varName = ID
		public Assignment getVarNameAssignment_1_1() { return cVarNameAssignment_1_1; }
		
		//ID
		public RuleCall getVarNameIDTerminalRuleCall_1_1_0() { return cVarNameIDTerminalRuleCall_1_1_0; }
	}
	public class InputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Input");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Input:
		//    name = ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class HttpClientOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListenersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cListenersHttpClientStateFunctionParserRuleCall_2_1_0 = (RuleCall)cListenersAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTriggersKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTriggerdAceOperationsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTriggerdAceOperationsTriggerdAceOperationParserRuleCall_3_2_0 = (RuleCall)cTriggerdAceOperationsAssignment_3_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//HttpClientOutcome:
		//    'on' name = ID
		//    ('('
		//        listeners += HttpClientStateFunction*
		//    ')'    )?
		//    ('triggers' '(' (triggerdAceOperations += TriggerdAceOperation)* ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' name = ID
		//('('
		//    listeners += HttpClientStateFunction*
		//')'    )?
		//('triggers' '(' (triggerdAceOperations += TriggerdAceOperation)* ')')?
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('('
		//    listeners += HttpClientStateFunction*
		//')'    )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//listeners += HttpClientStateFunction*
		public Assignment getListenersAssignment_2_1() { return cListenersAssignment_2_1; }
		
		//HttpClientStateFunction
		public RuleCall getListenersHttpClientStateFunctionParserRuleCall_2_1_0() { return cListenersHttpClientStateFunctionParserRuleCall_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//('triggers' '(' (triggerdAceOperations += TriggerdAceOperation)* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'triggers'
		public Keyword getTriggersKeyword_3_0() { return cTriggersKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//(triggerdAceOperations += TriggerdAceOperation)*
		public Assignment getTriggerdAceOperationsAssignment_3_2() { return cTriggerdAceOperationsAssignment_3_2; }
		
		//TriggerdAceOperation
		public RuleCall getTriggerdAceOperationsTriggerdAceOperationParserRuleCall_3_2_0() { return cTriggerdAceOperationsTriggerdAceOperationParserRuleCall_3_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}
	public class TriggerdAceOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.TriggerdAceOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDelayInMillisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDelayAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDelayINTTerminalRuleCall_0_1_0 = (RuleCall)cDelayAssignment_0_1.eContents().get(0);
		private final Assignment cTakeLatestAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final Keyword cTakeLatestTakeLatestKeyword_0_2_0 = (Keyword)cTakeLatestAssignment_0_2.eContents().get(0);
		private final Assignment cAceOperationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAceOperationHttpClientAceCrossReference_1_0 = (CrossReference)cAceOperationAssignment_1.eContents().get(0);
		private final RuleCall cAceOperationHttpClientAceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAceOperationHttpClientAceCrossReference_1_0.eContents().get(1);
		
		//TriggerdAceOperation:
		//    ('delayInMillis' delay = INT takeLatest ?= 'takeLatest'? ) ? aceOperation = [HttpClientAce | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('delayInMillis' delay = INT takeLatest ?= 'takeLatest'? ) ? aceOperation = [HttpClientAce | QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//('delayInMillis' delay = INT takeLatest ?= 'takeLatest'? ) ?
		public Group getGroup_0() { return cGroup_0; }
		
		//'delayInMillis'
		public Keyword getDelayInMillisKeyword_0_0() { return cDelayInMillisKeyword_0_0; }
		
		//delay = INT
		public Assignment getDelayAssignment_0_1() { return cDelayAssignment_0_1; }
		
		//INT
		public RuleCall getDelayINTTerminalRuleCall_0_1_0() { return cDelayINTTerminalRuleCall_0_1_0; }
		
		//takeLatest ?= 'takeLatest'?
		public Assignment getTakeLatestAssignment_0_2() { return cTakeLatestAssignment_0_2; }
		
		//'takeLatest'
		public Keyword getTakeLatestTakeLatestKeyword_0_2_0() { return cTakeLatestTakeLatestKeyword_0_2_0; }
		
		//aceOperation = [HttpClientAce | QualifiedName]
		public Assignment getAceOperationAssignment_1() { return cAceOperationAssignment_1; }
		
		//[HttpClientAce | QualifiedName]
		public CrossReference getAceOperationHttpClientAceCrossReference_1_0() { return cAceOperationHttpClientAceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAceOperationHttpClientAceQualifiedNameParserRuleCall_1_0_1() { return cAceOperationHttpClientAceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class HttpClientStateFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientStateFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStateFunctionTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0 = (RuleCall)cStateFunctionTypeAssignment_0.eContents().get(0);
		private final Assignment cStateElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStateElementClientAttributeCrossReference_1_0 = (CrossReference)cStateElementAssignment_1.eContents().get(0);
		private final RuleCall cStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cStateElementClientAttributeCrossReference_1_0.eContents().get(1);
		
		//HttpClientStateFunction:
		//    stateFunctionType = HttpClientStateFunctionType stateElement = [ClientAttribute | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//stateFunctionType = HttpClientStateFunctionType stateElement = [ClientAttribute | QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//stateFunctionType = HttpClientStateFunctionType
		public Assignment getStateFunctionTypeAssignment_0() { return cStateFunctionTypeAssignment_0; }
		
		//HttpClientStateFunctionType
		public RuleCall getStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0() { return cStateFunctionTypeHttpClientStateFunctionTypeParserRuleCall_0_0; }
		
		//stateElement = [ClientAttribute | QualifiedName]
		public Assignment getStateElementAssignment_1() { return cStateElementAssignment_1; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getStateElementClientAttributeCrossReference_1_0() { return cStateElementClientAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1() { return cStateElementClientAttributeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class HttpClientStateFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpClientStateFunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMergeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//HttpClientStateFunctionType:
		//    'set' | 'merge'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'set' | 'merge'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'set'
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }
		
		//'merge'
		public Keyword getMergeKeyword_1() { return cMergeKeyword_1; }
	}
	public class ClientAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNoComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNoComponentNoComponentKeyword_0_0 = (Keyword)cNoComponentAssignment_0.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cListListKeyword_1_0 = (Keyword)cListAssignment_1.eContents().get(0);
		private final Assignment cTreeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cTreeTreeKeyword_2_0 = (Keyword)cTreeAssignment_2.eContents().get(0);
		private final Assignment cGroupAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cGroupGroupKeyword_3_0 = (Keyword)cGroupAssignment_3.eContents().get(0);
		private final Assignment cListIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cListIdListIdKeyword_4_0 = (Keyword)cListIdAssignment_4.eContents().get(0);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Assignment cLocationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cLocationLocationKeyword_6_0 = (Keyword)cLocationAssignment_6.eContents().get(0);
		private final Assignment cStorageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cStorageStorageKeyword_7_0 = (Keyword)cStorageAssignment_7.eContents().get(0);
		private final Assignment cFromParentAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cFromParentFromParentKeyword_8_0 = (Keyword)cFromParentAssignment_8.eContents().get(0);
		private final Assignment cUiElementAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cUiElementUIElementParserRuleCall_9_0 = (RuleCall)cUiElementAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cAttributesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cAttributesClientAttributeParserRuleCall_10_1_0 = (RuleCall)cAttributesAssignment_10_1.eContents().get(0);
		private final Group cGroup_10_2 = (Group)cGroup_10.eContents().get(2);
		private final Keyword cOptionsKeyword_10_2_0 = (Keyword)cGroup_10_2.eContents().get(0);
		private final Assignment cOptionsAssignment_10_2_1 = (Assignment)cGroup_10_2.eContents().get(1);
		private final RuleCall cOptionsSTRINGTerminalRuleCall_10_2_1_0 = (RuleCall)cOptionsAssignment_10_2_1.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cActionsKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_3_1 = (Keyword)cGroup_10_3.eContents().get(1);
		private final Assignment cActionsAssignment_10_3_2 = (Assignment)cGroup_10_3.eContents().get(2);
		private final RuleCall cActionsUiActionParserRuleCall_10_3_2_0 = (RuleCall)cActionsAssignment_10_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3_3 = (Keyword)cGroup_10_3.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		
		//ClientAttribute:
		//    noComponent ?= 'noComponent'?
		//    list ?= 'List'?
		//    tree ?= 'Tree'?
		//    group ?= 'group'?
		//    listId ?= 'listId'?
		//    name = ID
		//    location ?= 'location'?
		//    storage ?= 'storage'?
		//    fromParent ?= 'fromParent'?
		//    uiElement = UIElement?
		//    ('{'
		//        attributes += ClientAttribute*
		//        ('options' options += STRING*)?
		//        ('actions' '{'
		//            actions += UiAction*
		//        '}')?
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//noComponent ?= 'noComponent'?
		//list ?= 'List'?
		//tree ?= 'Tree'?
		//group ?= 'group'?
		//listId ?= 'listId'?
		//name = ID
		//location ?= 'location'?
		//storage ?= 'storage'?
		//fromParent ?= 'fromParent'?
		//uiElement = UIElement?
		//('{'
		//    attributes += ClientAttribute*
		//    ('options' options += STRING*)?
		//    ('actions' '{'
		//        actions += UiAction*
		//    '}')?
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//noComponent ?= 'noComponent'?
		public Assignment getNoComponentAssignment_0() { return cNoComponentAssignment_0; }
		
		//'noComponent'
		public Keyword getNoComponentNoComponentKeyword_0_0() { return cNoComponentNoComponentKeyword_0_0; }
		
		//list ?= 'List'?
		public Assignment getListAssignment_1() { return cListAssignment_1; }
		
		//'List'
		public Keyword getListListKeyword_1_0() { return cListListKeyword_1_0; }
		
		//tree ?= 'Tree'?
		public Assignment getTreeAssignment_2() { return cTreeAssignment_2; }
		
		//'Tree'
		public Keyword getTreeTreeKeyword_2_0() { return cTreeTreeKeyword_2_0; }
		
		//group ?= 'group'?
		public Assignment getGroupAssignment_3() { return cGroupAssignment_3; }
		
		//'group'
		public Keyword getGroupGroupKeyword_3_0() { return cGroupGroupKeyword_3_0; }
		
		//listId ?= 'listId'?
		public Assignment getListIdAssignment_4() { return cListIdAssignment_4; }
		
		//'listId'
		public Keyword getListIdListIdKeyword_4_0() { return cListIdListIdKeyword_4_0; }
		
		//name = ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//location ?= 'location'?
		public Assignment getLocationAssignment_6() { return cLocationAssignment_6; }
		
		//'location'
		public Keyword getLocationLocationKeyword_6_0() { return cLocationLocationKeyword_6_0; }
		
		//storage ?= 'storage'?
		public Assignment getStorageAssignment_7() { return cStorageAssignment_7; }
		
		//'storage'
		public Keyword getStorageStorageKeyword_7_0() { return cStorageStorageKeyword_7_0; }
		
		//fromParent ?= 'fromParent'?
		public Assignment getFromParentAssignment_8() { return cFromParentAssignment_8; }
		
		//'fromParent'
		public Keyword getFromParentFromParentKeyword_8_0() { return cFromParentFromParentKeyword_8_0; }
		
		//uiElement = UIElement?
		public Assignment getUiElementAssignment_9() { return cUiElementAssignment_9; }
		
		//UIElement
		public RuleCall getUiElementUIElementParserRuleCall_9_0() { return cUiElementUIElementParserRuleCall_9_0; }
		
		//('{'
		//    attributes += ClientAttribute*
		//    ('options' options += STRING*)?
		//    ('actions' '{'
		//        actions += UiAction*
		//    '}')?
		//'}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_0() { return cLeftCurlyBracketKeyword_10_0; }
		
		//attributes += ClientAttribute*
		public Assignment getAttributesAssignment_10_1() { return cAttributesAssignment_10_1; }
		
		//ClientAttribute
		public RuleCall getAttributesClientAttributeParserRuleCall_10_1_0() { return cAttributesClientAttributeParserRuleCall_10_1_0; }
		
		//('options' options += STRING*)?
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//'options'
		public Keyword getOptionsKeyword_10_2_0() { return cOptionsKeyword_10_2_0; }
		
		//options += STRING*
		public Assignment getOptionsAssignment_10_2_1() { return cOptionsAssignment_10_2_1; }
		
		//STRING
		public RuleCall getOptionsSTRINGTerminalRuleCall_10_2_1_0() { return cOptionsSTRINGTerminalRuleCall_10_2_1_0; }
		
		//('actions' '{'
		//    actions += UiAction*
		//'}')?
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//'actions'
		public Keyword getActionsKeyword_10_3_0() { return cActionsKeyword_10_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_3_1() { return cLeftCurlyBracketKeyword_10_3_1; }
		
		//actions += UiAction*
		public Assignment getActionsAssignment_10_3_2() { return cActionsAssignment_10_3_2; }
		
		//UiAction
		public RuleCall getActionsUiActionParserRuleCall_10_3_2_0() { return cActionsUiActionParserRuleCall_10_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_3_3() { return cRightCurlyBracketKeyword_10_3_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
	}
	public class UiActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.UiAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetHttpClientAceCrossReference_1_0 = (CrossReference)cTargetAssignment_1.eContents().get(0);
		private final RuleCall cTargetHttpClientAceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cTargetHttpClientAceCrossReference_1_0.eContents().get(1);
		
		//UiAction:
		//    name = STRING target = [HttpClientAce | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = STRING target = [HttpClientAce | QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//name = STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//target = [HttpClientAce | QualifiedName]
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }
		
		//[HttpClientAce | QualifiedName]
		public CrossReference getTargetHttpClientAceCrossReference_1_0() { return cTargetHttpClientAceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getTargetHttpClientAceQualifiedNameParserRuleCall_1_0_1() { return cTargetHttpClientAceQualifiedNameParserRuleCall_1_0_1; }
	}
	public class UIElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.UIElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTextInputKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cCheckBoxKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPasswordInputKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cRadioKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cButtonKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//UIElement:
		//    'TextInput' | 'CheckBox' | 'Select' | 'PasswordInput' | 'Radio' | 'Button'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'TextInput' | 'CheckBox' | 'Select' | 'PasswordInput' | 'Radio' | 'Button'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'TextInput'
		public Keyword getTextInputKeyword_0() { return cTextInputKeyword_0; }
		
		//'CheckBox'
		public Keyword getCheckBoxKeyword_1() { return cCheckBoxKeyword_1; }
		
		//'Select'
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }
		
		//'PasswordInput'
		public Keyword getPasswordInputKeyword_3() { return cPasswordInputKeyword_3; }
		
		//'Radio'
		public Keyword getRadioKeyword_4() { return cRadioKeyword_4; }
		
		//'Button'
		public Keyword getButtonKeyword_5() { return cButtonKeyword_5; }
	}
	public class ClientScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientScenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGIVENKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGivenRefsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cGivenRefsClientGivenRefParserRuleCall_1_1_0 = (RuleCall)cGivenRefsAssignment_1_1.eContents().get(0);
		private final Assignment cClientWhenThenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cClientWhenThenClientWhenThenParserRuleCall_2_0 = (RuleCall)cClientWhenThenAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cANDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClientWhenThenAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cClientWhenThenClientWhenThenParserRuleCall_3_1_0 = (RuleCall)cClientWhenThenAssignment_3_1.eContents().get(0);
		
		//ClientScenario:
		//    name = ID
		//    ('GIVEN' (givenRefs += ClientGivenRef)* )?
		//    clientWhenThen += ClientWhenThen ('AND' clientWhenThen += ClientWhenThen)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID
		//('GIVEN' (givenRefs += ClientGivenRef)* )?
		//clientWhenThen += ClientWhenThen ('AND' clientWhenThen += ClientWhenThen)*
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('GIVEN' (givenRefs += ClientGivenRef)* )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_1_0() { return cGIVENKeyword_1_0; }
		
		//(givenRefs += ClientGivenRef)*
		public Assignment getGivenRefsAssignment_1_1() { return cGivenRefsAssignment_1_1; }
		
		//ClientGivenRef
		public RuleCall getGivenRefsClientGivenRefParserRuleCall_1_1_0() { return cGivenRefsClientGivenRefParserRuleCall_1_1_0; }
		
		//clientWhenThen += ClientWhenThen
		public Assignment getClientWhenThenAssignment_2() { return cClientWhenThenAssignment_2; }
		
		//ClientWhenThen
		public RuleCall getClientWhenThenClientWhenThenParserRuleCall_2_0() { return cClientWhenThenClientWhenThenParserRuleCall_2_0; }
		
		//('AND' clientWhenThen += ClientWhenThen)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'AND'
		public Keyword getANDKeyword_3_0() { return cANDKeyword_3_0; }
		
		//clientWhenThen += ClientWhenThen
		public Assignment getClientWhenThenAssignment_3_1() { return cClientWhenThenAssignment_3_1; }
		
		//ClientWhenThen
		public RuleCall getClientWhenThenClientWhenThenParserRuleCall_3_1_0() { return cClientWhenThenClientWhenThenParserRuleCall_3_1_0; }
	}
	public class ClientWhenThenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientWhenThen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClientWhenThenAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWHENKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWhenBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWhenBlockClientWhenBlockParserRuleCall_2_0 = (RuleCall)cWhenBlockAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDelayInMillisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDelayInMillisAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDelayInMillisINTTerminalRuleCall_3_1_0 = (RuleCall)cDelayInMillisAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTHENKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cThenBlockAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cThenBlockClientThenBlockParserRuleCall_4_1_0 = (RuleCall)cThenBlockAssignment_4_1.eContents().get(0);
		
		//ClientWhenThen:
		//    {ClientWhenThen}
		//    'WHEN' (whenBlock = ClientWhenBlock)? ('delayInMillis' delayInMillis = INT)?
		//    ('THEN' thenBlock = ClientThenBlock)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ClientWhenThen}
		//'WHEN' (whenBlock = ClientWhenBlock)? ('delayInMillis' delayInMillis = INT)?
		//('THEN' thenBlock = ClientThenBlock)?
		public Group getGroup() { return cGroup; }
		
		//{ClientWhenThen}
		public Action getClientWhenThenAction_0() { return cClientWhenThenAction_0; }
		
		//'WHEN'
		public Keyword getWHENKeyword_1() { return cWHENKeyword_1; }
		
		//(whenBlock = ClientWhenBlock)?
		public Assignment getWhenBlockAssignment_2() { return cWhenBlockAssignment_2; }
		
		//ClientWhenBlock
		public RuleCall getWhenBlockClientWhenBlockParserRuleCall_2_0() { return cWhenBlockClientWhenBlockParserRuleCall_2_0; }
		
		//('delayInMillis' delayInMillis = INT)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'delayInMillis'
		public Keyword getDelayInMillisKeyword_3_0() { return cDelayInMillisKeyword_3_0; }
		
		//delayInMillis = INT
		public Assignment getDelayInMillisAssignment_3_1() { return cDelayInMillisAssignment_3_1; }
		
		//INT
		public RuleCall getDelayInMillisINTTerminalRuleCall_3_1_0() { return cDelayInMillisINTTerminalRuleCall_3_1_0; }
		
		//('THEN' thenBlock = ClientThenBlock)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'THEN'
		public Keyword getTHENKeyword_4_0() { return cTHENKeyword_4_0; }
		
		//thenBlock = ClientThenBlock
		public Assignment getThenBlockAssignment_4_1() { return cThenBlockAssignment_4_1; }
		
		//ClientThenBlock
		public RuleCall getThenBlockClientThenBlockParserRuleCall_4_1_0() { return cThenBlockClientThenBlockParserRuleCall_4_1_0; }
	}
	public class ClientGivenRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientGivenRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cScenarioAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cScenarioClientScenarioCrossReference_0_0 = (CrossReference)cScenarioAssignment_0.eContents().get(0);
		private final RuleCall cScenarioClientScenarioQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cScenarioClientScenarioCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cExcludeGivenAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cExcludeGivenExcludeKeyword_1_0_0 = (Keyword)cExcludeGivenAssignment_1_0.eContents().get(0);
		private final Keyword cGIVENKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//ClientGivenRef:
		//    scenario = [ClientScenario | QualifiedName] (excludeGiven ?= 'exclude' 'GIVEN')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//scenario = [ClientScenario | QualifiedName] (excludeGiven ?= 'exclude' 'GIVEN')?
		public Group getGroup() { return cGroup; }
		
		//scenario = [ClientScenario | QualifiedName]
		public Assignment getScenarioAssignment_0() { return cScenarioAssignment_0; }
		
		//[ClientScenario | QualifiedName]
		public CrossReference getScenarioClientScenarioCrossReference_0_0() { return cScenarioClientScenarioCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getScenarioClientScenarioQualifiedNameParserRuleCall_0_0_1() { return cScenarioClientScenarioQualifiedNameParserRuleCall_0_0_1; }
		
		//(excludeGiven ?= 'exclude' 'GIVEN')?
		public Group getGroup_1() { return cGroup_1; }
		
		//excludeGiven ?= 'exclude'
		public Assignment getExcludeGivenAssignment_1_0() { return cExcludeGivenAssignment_1_0; }
		
		//'exclude'
		public Keyword getExcludeGivenExcludeKeyword_1_0_0() { return cExcludeGivenExcludeKeyword_1_0_0; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_1_1() { return cGIVENKeyword_1_1; }
	}
	public class ClientWhenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientWhenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cActionHttpClientAceCrossReference_0_0 = (CrossReference)cActionAssignment_0.eContents().get(0);
		private final RuleCall cActionHttpClientAceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cActionHttpClientAceCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Assignment cInputValuesAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cInputValuesInputValueParserRuleCall_1_1_0_0 = (RuleCall)cInputValuesAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cInputValuesAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cInputValuesInputValueParserRuleCall_1_1_1_1_0 = (RuleCall)cInputValuesAssignment_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSquishyValuesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSquishyValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSquishyValuesSquishyValueParserRuleCall_2_1_0 = (RuleCall)cSquishyValuesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSquishyValuesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cSquishyValuesSquishyValueParserRuleCall_2_2_1_0 = (RuleCall)cSquishyValuesAssignment_2_2_1.eContents().get(0);
		
		//ClientWhenBlock:
		//    action = [HttpClientAce|QualifiedName]
		//    ('(' (inputValues += InputValue (',' inputValues += InputValue)* )? ')')?
		//    ('squishyValues' squishyValues += SquishyValue (',' squishyValues += SquishyValue)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//action = [HttpClientAce|QualifiedName]
		//('(' (inputValues += InputValue (',' inputValues += InputValue)* )? ')')?
		//('squishyValues' squishyValues += SquishyValue (',' squishyValues += SquishyValue)*)?
		public Group getGroup() { return cGroup; }
		
		//action = [HttpClientAce|QualifiedName]
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }
		
		//[HttpClientAce|QualifiedName]
		public CrossReference getActionHttpClientAceCrossReference_0_0() { return cActionHttpClientAceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getActionHttpClientAceQualifiedNameParserRuleCall_0_0_1() { return cActionHttpClientAceQualifiedNameParserRuleCall_0_0_1; }
		
		//('(' (inputValues += InputValue (',' inputValues += InputValue)* )? ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//(inputValues += InputValue (',' inputValues += InputValue)* )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//inputValues += InputValue
		public Assignment getInputValuesAssignment_1_1_0() { return cInputValuesAssignment_1_1_0; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_1_1_0_0() { return cInputValuesInputValueParserRuleCall_1_1_0_0; }
		
		//(',' inputValues += InputValue)*
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_1_0() { return cCommaKeyword_1_1_1_0; }
		
		//inputValues += InputValue
		public Assignment getInputValuesAssignment_1_1_1_1() { return cInputValuesAssignment_1_1_1_1; }
		
		//InputValue
		public RuleCall getInputValuesInputValueParserRuleCall_1_1_1_1_0() { return cInputValuesInputValueParserRuleCall_1_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
		
		//('squishyValues' squishyValues += SquishyValue (',' squishyValues += SquishyValue)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'squishyValues'
		public Keyword getSquishyValuesKeyword_2_0() { return cSquishyValuesKeyword_2_0; }
		
		//squishyValues += SquishyValue
		public Assignment getSquishyValuesAssignment_2_1() { return cSquishyValuesAssignment_2_1; }
		
		//SquishyValue
		public RuleCall getSquishyValuesSquishyValueParserRuleCall_2_1_0() { return cSquishyValuesSquishyValueParserRuleCall_2_1_0; }
		
		//(',' squishyValues += SquishyValue)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//squishyValues += SquishyValue
		public Assignment getSquishyValuesAssignment_2_2_1() { return cSquishyValuesAssignment_2_2_1; }
		
		//SquishyValue
		public RuleCall getSquishyValuesSquishyValueParserRuleCall_2_2_1_0() { return cSquishyValuesSquishyValueParserRuleCall_2_2_1_0; }
	}
	public class SquishyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SquishyValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSquishyValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUuidKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUuidAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUuidSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cUuidAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cClientSystemTimeKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cClientSystemTimeAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cClientSystemTimeSTRINGTerminalRuleCall_2_2_1_0 = (RuleCall)cClientSystemTimeAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cServerSystemTimeKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cServerSystemTimeAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cServerSystemTimeSTRINGTerminalRuleCall_2_3_1_0 = (RuleCall)cServerSystemTimeAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cGroup_2.eContents().get(4);
		private final Keyword cSquishyKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cAttributeAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_2_4_1_0 = (CrossReference)cAttributeAssignment_2_4_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_2_4_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_2_4_1_0.eContents().get(1);
		private final Keyword cColonKeyword_2_4_2 = (Keyword)cGroup_2_4.eContents().get(2);
		private final Assignment cValueAssignment_2_4_3 = (Assignment)cGroup_2_4.eContents().get(3);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_4_3_0 = (RuleCall)cValueAssignment_2_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SquishyValue:
		//    {SquishyValue} '{'
		//        ('uuid' uuid = STRING
		//        ('clientSystemTime' clientSystemTime = STRING)?
		//        ('serverSystemTime' serverSystemTime = STRING)?
		//        ('squishy' attribute = [Attribute | QualifiedName] ':' value = PrimitiveValue)?)?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SquishyValue} '{'
		//    ('uuid' uuid = STRING
		//    ('clientSystemTime' clientSystemTime = STRING)?
		//    ('serverSystemTime' serverSystemTime = STRING)?
		//    ('squishy' attribute = [Attribute | QualifiedName] ':' value = PrimitiveValue)?)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SquishyValue}
		public Action getSquishyValueAction_0() { return cSquishyValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('uuid' uuid = STRING
		//('clientSystemTime' clientSystemTime = STRING)?
		//('serverSystemTime' serverSystemTime = STRING)?
		//('squishy' attribute = [Attribute | QualifiedName] ':' value = PrimitiveValue)?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'uuid'
		public Keyword getUuidKeyword_2_0() { return cUuidKeyword_2_0; }
		
		//uuid = STRING
		public Assignment getUuidAssignment_2_1() { return cUuidAssignment_2_1; }
		
		//STRING
		public RuleCall getUuidSTRINGTerminalRuleCall_2_1_0() { return cUuidSTRINGTerminalRuleCall_2_1_0; }
		
		//('clientSystemTime' clientSystemTime = STRING)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'clientSystemTime'
		public Keyword getClientSystemTimeKeyword_2_2_0() { return cClientSystemTimeKeyword_2_2_0; }
		
		//clientSystemTime = STRING
		public Assignment getClientSystemTimeAssignment_2_2_1() { return cClientSystemTimeAssignment_2_2_1; }
		
		//STRING
		public RuleCall getClientSystemTimeSTRINGTerminalRuleCall_2_2_1_0() { return cClientSystemTimeSTRINGTerminalRuleCall_2_2_1_0; }
		
		//('serverSystemTime' serverSystemTime = STRING)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'serverSystemTime'
		public Keyword getServerSystemTimeKeyword_2_3_0() { return cServerSystemTimeKeyword_2_3_0; }
		
		//serverSystemTime = STRING
		public Assignment getServerSystemTimeAssignment_2_3_1() { return cServerSystemTimeAssignment_2_3_1; }
		
		//STRING
		public RuleCall getServerSystemTimeSTRINGTerminalRuleCall_2_3_1_0() { return cServerSystemTimeSTRINGTerminalRuleCall_2_3_1_0; }
		
		//('squishy' attribute = [Attribute | QualifiedName] ':' value = PrimitiveValue)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'squishy'
		public Keyword getSquishyKeyword_2_4_0() { return cSquishyKeyword_2_4_0; }
		
		//attribute = [Attribute | QualifiedName]
		public Assignment getAttributeAssignment_2_4_1() { return cAttributeAssignment_2_4_1; }
		
		//[Attribute | QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_2_4_1_0() { return cAttributeAttributeCrossReference_2_4_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_2_4_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_2_4_1_0_1; }
		
		//':'
		public Keyword getColonKeyword_2_4_2() { return cColonKeyword_2_4_2; }
		
		//value = PrimitiveValue
		public Assignment getValueAssignment_2_4_3() { return cValueAssignment_2_4_3; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_4_3_0() { return cValuePrimitiveValueParserRuleCall_2_4_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class InputValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.InputValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInputAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cInputInputCrossReference_0_0 = (CrossReference)cInputAssignment_0.eContents().get(0);
		private final RuleCall cInputInputQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cInputInputCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//InputValue:
		//    input = [Input | QualifiedName] ':' value = PrimitiveValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//input = [Input | QualifiedName] ':' value = PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//input = [Input | QualifiedName]
		public Assignment getInputAssignment_0() { return cInputAssignment_0; }
		
		//[Input | QualifiedName]
		public CrossReference getInputInputCrossReference_0_0() { return cInputInputCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getInputInputQualifiedNameParserRuleCall_0_0_1() { return cInputInputQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value = PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class ClientThenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ClientThenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClientThenBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cExpectedStateKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cStateVerificationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cStateVerificationsStateVerificationParserRuleCall_1_1_0 = (RuleCall)cStateVerificationsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cVerificationsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cVerificationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cVerificationsCustomVerificationParserRuleCall_2_1_0 = (RuleCall)cVerificationsAssignment_2_1.eContents().get(0);
		
		//ClientThenBlock: {ClientThenBlock}
		//    ('expectedState' stateVerifications += StateVerification*)?
		//    ('verifications' verifications += CustomVerification*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ClientThenBlock}
		//   ('expectedState' stateVerifications += StateVerification*)?
		//   ('verifications' verifications += CustomVerification*)?
		public Group getGroup() { return cGroup; }
		
		//{ClientThenBlock}
		public Action getClientThenBlockAction_0() { return cClientThenBlockAction_0; }
		
		//('expectedState' stateVerifications += StateVerification*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'expectedState'
		public Keyword getExpectedStateKeyword_1_0() { return cExpectedStateKeyword_1_0; }
		
		//stateVerifications += StateVerification*
		public Assignment getStateVerificationsAssignment_1_1() { return cStateVerificationsAssignment_1_1; }
		
		//StateVerification
		public RuleCall getStateVerificationsStateVerificationParserRuleCall_1_1_0() { return cStateVerificationsStateVerificationParserRuleCall_1_1_0; }
		
		//('verifications' verifications += CustomVerification*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'verifications'
		public Keyword getVerificationsKeyword_2_0() { return cVerificationsKeyword_2_0; }
		
		//verifications += CustomVerification*
		public Assignment getVerificationsAssignment_2_1() { return cVerificationsAssignment_2_1; }
		
		//CustomVerification
		public RuleCall getVerificationsCustomVerificationParserRuleCall_2_1_0() { return cVerificationsCustomVerificationParserRuleCall_2_1_0; }
	}
	public class StateVerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.StateVerification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cStateRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cStateRefClientAttributeCrossReference_1_0 = (CrossReference)cStateRefAssignment_1.eContents().get(0);
		private final RuleCall cStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cStateRefClientAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cShouldKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNotAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNotNotKeyword_3_0 = (Keyword)cNotAssignment_3.eContents().get(0);
		private final Keyword cBeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueJsonValueClientParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		
		//StateVerification:
		//    name = ID stateRef = [ClientAttribute | QualifiedName] 'should' (not ?= 'not')? 'be' value = JsonValueClient
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID stateRef = [ClientAttribute | QualifiedName] 'should' (not ?= 'not')? 'be' value = JsonValueClient
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//stateRef = [ClientAttribute | QualifiedName]
		public Assignment getStateRefAssignment_1() { return cStateRefAssignment_1; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getStateRefClientAttributeCrossReference_1_0() { return cStateRefClientAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1() { return cStateRefClientAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'should'
		public Keyword getShouldKeyword_2() { return cShouldKeyword_2; }
		
		//(not ?= 'not')?
		public Assignment getNotAssignment_3() { return cNotAssignment_3; }
		
		//'not'
		public Keyword getNotNotKeyword_3_0() { return cNotNotKeyword_3_0; }
		
		//'be'
		public Keyword getBeKeyword_4() { return cBeKeyword_4; }
		
		//value = JsonValueClient
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//JsonValueClient
		public RuleCall getValueJsonValueClientParserRuleCall_5_0() { return cValueJsonValueClientParserRuleCall_5_0; }
	}
	public class CustomVerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.CustomVerification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFunctionNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFunctionNameIDTerminalRuleCall_0_0 = (RuleCall)cFunctionNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cStateRefAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cStateRefClientAttributeCrossReference_1_1_0 = (CrossReference)cStateRefAssignment_1_1.eContents().get(0);
		private final RuleCall cStateRefClientAttributeQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cStateRefClientAttributeCrossReference_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//CustomVerification:
		//    functionName = ID ('(' stateRef = [ClientAttribute | QualifiedName] ')') ?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//functionName = ID ('(' stateRef = [ClientAttribute | QualifiedName] ')') ?
		public Group getGroup() { return cGroup; }
		
		//functionName = ID
		public Assignment getFunctionNameAssignment_0() { return cFunctionNameAssignment_0; }
		
		//ID
		public RuleCall getFunctionNameIDTerminalRuleCall_0_0() { return cFunctionNameIDTerminalRuleCall_0_0; }
		
		//('(' stateRef = [ClientAttribute | QualifiedName] ')') ?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//stateRef = [ClientAttribute | QualifiedName]
		public Assignment getStateRefAssignment_1_1() { return cStateRefAssignment_1_1; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getStateRefClientAttributeCrossReference_1_1_0() { return cStateRefClientAttributeCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getStateRefClientAttributeQualifiedNameParserRuleCall_1_1_0_1() { return cStateRefClientAttributeQualifiedNameParserRuleCall_1_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	public class JsonObjectClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonObjectClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonObjectClientAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersJsonMemberClientParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMembersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMembersJsonMemberClientParserRuleCall_3_1_0 = (RuleCall)cMembersAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonObjectClient:
		//    {JsonObjectClient} '{'
		//        (members+=JsonMemberClient)?
		//        (',' members+=JsonMemberClient)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonObjectClient} '{'
		//    (members+=JsonMemberClient)?
		//    (',' members+=JsonMemberClient)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{JsonObjectClient}
		public Action getJsonObjectClientAction_0() { return cJsonObjectClientAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(members+=JsonMemberClient)?
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }
		
		//JsonMemberClient
		public RuleCall getMembersJsonMemberClientParserRuleCall_2_0() { return cMembersJsonMemberClientParserRuleCall_2_0; }
		
		//(',' members+=JsonMemberClient)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//members+=JsonMemberClient
		public Assignment getMembersAssignment_3_1() { return cMembersAssignment_3_1; }
		
		//JsonMemberClient
		public RuleCall getMembersJsonMemberClientParserRuleCall_3_1_0() { return cMembersJsonMemberClientParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JsonMemberClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonMemberClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeClientAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeClientAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonValueClientParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonMemberClient:
		//    attribute=[ClientAttribute | QualifiedName] ':' value=JsonValueClient;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[ClientAttribute | QualifiedName] ':' value=JsonValueClient
		public Group getGroup() { return cGroup; }
		
		//attribute=[ClientAttribute | QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[ClientAttribute | QualifiedName]
		public CrossReference getAttributeClientAttributeCrossReference_0_0() { return cAttributeClientAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeClientAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=JsonValueClient
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//JsonValueClient
		public RuleCall getValueJsonValueClientParserRuleCall_2_0() { return cValueJsonValueClientParserRuleCall_2_0; }
	}
	public class JsonValueClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonValueClient");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonObjectClientParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonArrayClientParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cNullTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLongTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJsonDateTimeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cUndefinedTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//JsonValueClient:
		//    JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime | UndefinedType;
		@Override public ParserRule getRule() { return rule; }
		
		//JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime | UndefinedType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JsonObjectClient
		public RuleCall getJsonObjectClientParserRuleCall_0() { return cJsonObjectClientParserRuleCall_0; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_1() { return cStringTypeParserRuleCall_1; }
		
		//JsonArrayClient
		public RuleCall getJsonArrayClientParserRuleCall_2() { return cJsonArrayClientParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//NullType
		public RuleCall getNullTypeParserRuleCall_4() { return cNullTypeParserRuleCall_4; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_5() { return cLongTypeParserRuleCall_5; }
		
		//JsonDateTime
		public RuleCall getJsonDateTimeParserRuleCall_6() { return cJsonDateTimeParserRuleCall_6; }
		
		//UndefinedType
		public RuleCall getUndefinedTypeParserRuleCall_7() { return cUndefinedTypeParserRuleCall_7; }
	}
	public class JsonArrayClientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonArrayClient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonArrayClientAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesJsonValueClientParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesJsonValueClientParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonArrayClient:
		//    {JsonArrayClient} '[' (values+=JsonValueClient)? (',' values+=JsonValueClient)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonArrayClient} '[' (values+=JsonValueClient)? (',' values+=JsonValueClient)* ']'
		public Group getGroup() { return cGroup; }
		
		//{JsonArrayClient}
		public Action getJsonArrayClientAction_0() { return cJsonArrayClientAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(values+=JsonValueClient)?
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }
		
		//JsonValueClient
		public RuleCall getValuesJsonValueClientParserRuleCall_2_0() { return cValuesJsonValueClientParserRuleCall_2_0; }
		
		//(',' values+=JsonValueClient)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//values+=JsonValueClient
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//JsonValueClient
		public RuleCall getValuesJsonValueClientParserRuleCall_3_1_0() { return cValuesJsonValueClientParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class HttpServerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cJavaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cJavaJavaKeyword_0_0 = (Keyword)cJavaAssignment_0.eContents().get(0);
		private final Assignment cCsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cCsCKeyword_1_0 = (Keyword)cCsAssignment_1.eContents().get(0);
		private final Assignment cDropwizardAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cDropwizardDropwizardKeyword_2_0 = (Keyword)cDropwizardAssignment_2.eContents().get(0);
		private final Assignment cDotnetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cDotnetDotnetKeyword_3_0 = (Keyword)cDotnetAssignment_3.eContents().get(0);
		private final Assignment cJDBI3Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cJDBI3JDBI3Keyword_4_0 = (Keyword)cJDBI3Assignment_4.eContents().get(0);
		private final Assignment cEFAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cEFEntityFrameworkKeyword_5_0 = (Keyword)cEFAssignment_5.eContents().get(0);
		private final Assignment cLiquibaseAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cLiquibaseLiquibaseKeyword_6_0 = (Keyword)cLiquibaseAssignment_6.eContents().get(0);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameQualifiedNameParserRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAuthorizationKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cAuthUserAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cAuthUserAuthUserParserRuleCall_8_1_0 = (RuleCall)cAuthUserAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cImportKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cAuthUserRefAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cAuthUserRefAuthUserCrossReference_9_1_0 = (CrossReference)cAuthUserRefAssignment_9_1.eContents().get(0);
		private final RuleCall cAuthUserRefAuthUserQualifiedNameParserRuleCall_9_1_0_1 = (RuleCall)cAuthUserRefAuthUserCrossReference_9_1_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cACEKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cAceOperationsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cAceOperationsHttpServerAceParserRuleCall_10_1_0 = (RuleCall)cAceOperationsAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cViewsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cViewsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cViewsHttpServerViewParserRuleCall_11_1_0 = (RuleCall)cViewsAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cModelsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cModelsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cModelsModelParserRuleCall_12_1_0 = (RuleCall)cModelsAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cScenariosKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cScenariosAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cScenariosScenarioParserRuleCall_13_1_0 = (RuleCall)cScenariosAssignment_13_1.eContents().get(0);
		
		//HttpServer:
		//    java ?= 'Java'?
		//    cs ?= 'C#'?
		//    dropwizard ?= 'Dropwizard'?
		//    dotnet ?= 'dotnet'?
		//    JDBI3 ?= 'JDBI3'?
		//    EF ?= 'EntityFramework'?
		//    liquibase ?= 'Liquibase'?
		//    name = QualifiedName
		//    ('Authorization' authUser = AuthUser)?
		//    ('import' authUserRef = [AuthUser | QualifiedName])?
		//    ('ACE' (aceOperations += HttpServerAce)*    )?
		//    ('views' (views += HttpServerView)* )?
		//    ('models' (models += Model)*)?
		//    ('scenarios' (scenarios += Scenario)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//java ?= 'Java'?
		//cs ?= 'C#'?
		//dropwizard ?= 'Dropwizard'?
		//dotnet ?= 'dotnet'?
		//JDBI3 ?= 'JDBI3'?
		//EF ?= 'EntityFramework'?
		//liquibase ?= 'Liquibase'?
		//name = QualifiedName
		//('Authorization' authUser = AuthUser)?
		//('import' authUserRef = [AuthUser | QualifiedName])?
		//('ACE' (aceOperations += HttpServerAce)*    )?
		//('views' (views += HttpServerView)* )?
		//('models' (models += Model)*)?
		//('scenarios' (scenarios += Scenario)*)?
		public Group getGroup() { return cGroup; }
		
		//java ?= 'Java'?
		public Assignment getJavaAssignment_0() { return cJavaAssignment_0; }
		
		//'Java'
		public Keyword getJavaJavaKeyword_0_0() { return cJavaJavaKeyword_0_0; }
		
		//cs ?= 'C#'?
		public Assignment getCsAssignment_1() { return cCsAssignment_1; }
		
		//'C#'
		public Keyword getCsCKeyword_1_0() { return cCsCKeyword_1_0; }
		
		//dropwizard ?= 'Dropwizard'?
		public Assignment getDropwizardAssignment_2() { return cDropwizardAssignment_2; }
		
		//'Dropwizard'
		public Keyword getDropwizardDropwizardKeyword_2_0() { return cDropwizardDropwizardKeyword_2_0; }
		
		//dotnet ?= 'dotnet'?
		public Assignment getDotnetAssignment_3() { return cDotnetAssignment_3; }
		
		//'dotnet'
		public Keyword getDotnetDotnetKeyword_3_0() { return cDotnetDotnetKeyword_3_0; }
		
		//JDBI3 ?= 'JDBI3'?
		public Assignment getJDBI3Assignment_4() { return cJDBI3Assignment_4; }
		
		//'JDBI3'
		public Keyword getJDBI3JDBI3Keyword_4_0() { return cJDBI3JDBI3Keyword_4_0; }
		
		//EF ?= 'EntityFramework'?
		public Assignment getEFAssignment_5() { return cEFAssignment_5; }
		
		//'EntityFramework'
		public Keyword getEFEntityFrameworkKeyword_5_0() { return cEFEntityFrameworkKeyword_5_0; }
		
		//liquibase ?= 'Liquibase'?
		public Assignment getLiquibaseAssignment_6() { return cLiquibaseAssignment_6; }
		
		//'Liquibase'
		public Keyword getLiquibaseLiquibaseKeyword_6_0() { return cLiquibaseLiquibaseKeyword_6_0; }
		
		//name = QualifiedName
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_7_0() { return cNameQualifiedNameParserRuleCall_7_0; }
		
		//('Authorization' authUser = AuthUser)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'Authorization'
		public Keyword getAuthorizationKeyword_8_0() { return cAuthorizationKeyword_8_0; }
		
		//authUser = AuthUser
		public Assignment getAuthUserAssignment_8_1() { return cAuthUserAssignment_8_1; }
		
		//AuthUser
		public RuleCall getAuthUserAuthUserParserRuleCall_8_1_0() { return cAuthUserAuthUserParserRuleCall_8_1_0; }
		
		//('import' authUserRef = [AuthUser | QualifiedName])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'import'
		public Keyword getImportKeyword_9_0() { return cImportKeyword_9_0; }
		
		//authUserRef = [AuthUser | QualifiedName]
		public Assignment getAuthUserRefAssignment_9_1() { return cAuthUserRefAssignment_9_1; }
		
		//[AuthUser | QualifiedName]
		public CrossReference getAuthUserRefAuthUserCrossReference_9_1_0() { return cAuthUserRefAuthUserCrossReference_9_1_0; }
		
		//QualifiedName
		public RuleCall getAuthUserRefAuthUserQualifiedNameParserRuleCall_9_1_0_1() { return cAuthUserRefAuthUserQualifiedNameParserRuleCall_9_1_0_1; }
		
		//('ACE' (aceOperations += HttpServerAce)*	)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'ACE'
		public Keyword getACEKeyword_10_0() { return cACEKeyword_10_0; }
		
		//(aceOperations += HttpServerAce)*
		public Assignment getAceOperationsAssignment_10_1() { return cAceOperationsAssignment_10_1; }
		
		//HttpServerAce
		public RuleCall getAceOperationsHttpServerAceParserRuleCall_10_1_0() { return cAceOperationsHttpServerAceParserRuleCall_10_1_0; }
		
		//('views' (views += HttpServerView)* )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'views'
		public Keyword getViewsKeyword_11_0() { return cViewsKeyword_11_0; }
		
		//(views += HttpServerView)*
		public Assignment getViewsAssignment_11_1() { return cViewsAssignment_11_1; }
		
		//HttpServerView
		public RuleCall getViewsHttpServerViewParserRuleCall_11_1_0() { return cViewsHttpServerViewParserRuleCall_11_1_0; }
		
		//('models' (models += Model)*)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'models'
		public Keyword getModelsKeyword_12_0() { return cModelsKeyword_12_0; }
		
		//(models += Model)*
		public Assignment getModelsAssignment_12_1() { return cModelsAssignment_12_1; }
		
		//Model
		public RuleCall getModelsModelParserRuleCall_12_1_0() { return cModelsModelParserRuleCall_12_1_0; }
		
		//('scenarios' (scenarios += Scenario)*)?
		public Group getGroup_13() { return cGroup_13; }
		
		//'scenarios'
		public Keyword getScenariosKeyword_13_0() { return cScenariosKeyword_13_0; }
		
		//(scenarios += Scenario)*
		public Assignment getScenariosAssignment_13_1() { return cScenariosAssignment_13_1; }
		
		//Scenario
		public RuleCall getScenariosScenarioParserRuleCall_13_1_0() { return cScenariosScenarioParserRuleCall_13_1_0; }
	}
	public class HttpServerAceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAce");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHttpServerAceWriteParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHttpServerAceReadParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//HttpServerAce:
		//    HttpServerAceWrite | HttpServerAceRead
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//HttpServerAceWrite | HttpServerAceRead
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//HttpServerAceWrite
		public RuleCall getHttpServerAceWriteParserRuleCall_0() { return cHttpServerAceWriteParserRuleCall_0; }
		
		//HttpServerAceRead
		public RuleCall getHttpServerAceReadParserRuleCall_1() { return cHttpServerAceReadParserRuleCall_1; }
	}
	public class HttpServerAceWriteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAceWrite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelModelCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cModelModelCrossReference_2_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeWriteFunctionTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cUrlAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUrlSTRINGTerminalRuleCall_5_0 = (RuleCall)cUrlAssignment_5.eContents().get(0);
		private final Assignment cAuthorizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cAuthorizeAuthorizeKeyword_6_0 = (Keyword)cAuthorizeAssignment_6.eContents().get(0);
		private final Assignment cMultipartFormDataAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cMultipartFormDataMultipartFormDataKeyword_7_0 = (Keyword)cMultipartFormDataAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPathParamsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPathParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPathParamsAttributeParamRefParserRuleCall_8_1_0 = (RuleCall)cPathParamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cQueryParamsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cQueryParamsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cQueryParamsAttributeParamRefParserRuleCall_9_1_0 = (RuleCall)cQueryParamsAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cPayloadKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cPayloadAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPayloadAttributeParamRefParserRuleCall_10_1_0 = (RuleCall)cPayloadAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cResponseKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cResponseAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cResponseAttributeCrossReference_11_1_0 = (CrossReference)cResponseAssignment_11_1.eContents().get(0);
		private final RuleCall cResponseAttributeQualifiedNameParserRuleCall_11_1_0_1 = (RuleCall)cResponseAttributeCrossReference_11_1_0.eContents().get(1);
		private final Assignment cOutcomesAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cOutcomesHttpServerOutcomeParserRuleCall_12_0 = (RuleCall)cOutcomesAssignment_12.eContents().get(0);
		
		//HttpServerAceWrite:
		//    name = ID '<' model = [ Model | QualifiedName ] '>'
		//    type = WriteFunctionType
		//    url = STRING
		//    authorize ?= 'authorize'?
		//    multipartFormData ?= 'multipartFormData'?
		//    ('pathParams' (pathParams += AttributeParamRef)*)?
		//    ('queryParams' (queryParams += AttributeParamRef)*)?
		//    ('payload' (payload += AttributeParamRef)*)?
		//    ('response' (response += [Attribute | QualifiedName])*)?
		//    (outcomes += HttpServerOutcome)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID '<' model = [ Model | QualifiedName ] '>'
		//type = WriteFunctionType
		//url = STRING
		//authorize ?= 'authorize'?
		//multipartFormData ?= 'multipartFormData'?
		//('pathParams' (pathParams += AttributeParamRef)*)?
		//('queryParams' (queryParams += AttributeParamRef)*)?
		//('payload' (payload += AttributeParamRef)*)?
		//('response' (response += [Attribute | QualifiedName])*)?
		//(outcomes += HttpServerOutcome)*
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }
		
		//model = [ Model | QualifiedName ]
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[ Model | QualifiedName ]
		public CrossReference getModelModelCrossReference_2_0() { return cModelModelCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_2_0_1() { return cModelModelQualifiedNameParserRuleCall_2_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
		
		//type = WriteFunctionType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//WriteFunctionType
		public RuleCall getTypeWriteFunctionTypeParserRuleCall_4_0() { return cTypeWriteFunctionTypeParserRuleCall_4_0; }
		
		//url = STRING
		public Assignment getUrlAssignment_5() { return cUrlAssignment_5; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_5_0() { return cUrlSTRINGTerminalRuleCall_5_0; }
		
		//authorize ?= 'authorize'?
		public Assignment getAuthorizeAssignment_6() { return cAuthorizeAssignment_6; }
		
		//'authorize'
		public Keyword getAuthorizeAuthorizeKeyword_6_0() { return cAuthorizeAuthorizeKeyword_6_0; }
		
		//multipartFormData ?= 'multipartFormData'?
		public Assignment getMultipartFormDataAssignment_7() { return cMultipartFormDataAssignment_7; }
		
		//'multipartFormData'
		public Keyword getMultipartFormDataMultipartFormDataKeyword_7_0() { return cMultipartFormDataMultipartFormDataKeyword_7_0; }
		
		//('pathParams' (pathParams += AttributeParamRef)*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'pathParams'
		public Keyword getPathParamsKeyword_8_0() { return cPathParamsKeyword_8_0; }
		
		//(pathParams += AttributeParamRef)*
		public Assignment getPathParamsAssignment_8_1() { return cPathParamsAssignment_8_1; }
		
		//AttributeParamRef
		public RuleCall getPathParamsAttributeParamRefParserRuleCall_8_1_0() { return cPathParamsAttributeParamRefParserRuleCall_8_1_0; }
		
		//('queryParams' (queryParams += AttributeParamRef)*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'queryParams'
		public Keyword getQueryParamsKeyword_9_0() { return cQueryParamsKeyword_9_0; }
		
		//(queryParams += AttributeParamRef)*
		public Assignment getQueryParamsAssignment_9_1() { return cQueryParamsAssignment_9_1; }
		
		//AttributeParamRef
		public RuleCall getQueryParamsAttributeParamRefParserRuleCall_9_1_0() { return cQueryParamsAttributeParamRefParserRuleCall_9_1_0; }
		
		//('payload' (payload += AttributeParamRef)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'payload'
		public Keyword getPayloadKeyword_10_0() { return cPayloadKeyword_10_0; }
		
		//(payload += AttributeParamRef)*
		public Assignment getPayloadAssignment_10_1() { return cPayloadAssignment_10_1; }
		
		//AttributeParamRef
		public RuleCall getPayloadAttributeParamRefParserRuleCall_10_1_0() { return cPayloadAttributeParamRefParserRuleCall_10_1_0; }
		
		//('response' (response += [Attribute | QualifiedName])*)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'response'
		public Keyword getResponseKeyword_11_0() { return cResponseKeyword_11_0; }
		
		//(response += [Attribute | QualifiedName])*
		public Assignment getResponseAssignment_11_1() { return cResponseAssignment_11_1; }
		
		//[Attribute | QualifiedName]
		public CrossReference getResponseAttributeCrossReference_11_1_0() { return cResponseAttributeCrossReference_11_1_0; }
		
		//QualifiedName
		public RuleCall getResponseAttributeQualifiedNameParserRuleCall_11_1_0_1() { return cResponseAttributeQualifiedNameParserRuleCall_11_1_0_1; }
		
		//(outcomes += HttpServerOutcome)*
		public Assignment getOutcomesAssignment_12() { return cOutcomesAssignment_12; }
		
		//HttpServerOutcome
		public RuleCall getOutcomesHttpServerOutcomeParserRuleCall_12_0() { return cOutcomesHttpServerOutcomeParserRuleCall_12_0; }
	}
	public class HttpServerOutcomeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerOutcome");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cListenersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cListenersHttpServerViewFunctionCrossReference_2_1_0 = (CrossReference)cListenersAssignment_2_1.eContents().get(0);
		private final RuleCall cListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cListenersHttpServerViewFunctionCrossReference_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//HttpServerOutcome:
		//    'on' name = ID
		//    ('('(listeners += [HttpServerViewFunction | QualifiedName])*')')*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'on' name = ID
		//('('(listeners += [HttpServerViewFunction | QualifiedName])*')')*
		public Group getGroup() { return cGroup; }
		
		//'on'
		public Keyword getOnKeyword_0() { return cOnKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('('(listeners += [HttpServerViewFunction | QualifiedName])*')')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//(listeners += [HttpServerViewFunction | QualifiedName])*
		public Assignment getListenersAssignment_2_1() { return cListenersAssignment_2_1; }
		
		//[HttpServerViewFunction | QualifiedName]
		public CrossReference getListenersHttpServerViewFunctionCrossReference_2_1_0() { return cListenersHttpServerViewFunctionCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1() { return cListenersHttpServerViewFunctionQualifiedNameParserRuleCall_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class HttpServerAceReadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerAceRead");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelModelCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cModelModelCrossReference_2_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeReadFunctionTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cUrlAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUrlSTRINGTerminalRuleCall_5_0 = (RuleCall)cUrlAssignment_5.eContents().get(0);
		private final Assignment cAuthorizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cAuthorizeAuthorizeKeyword_6_0 = (Keyword)cAuthorizeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPathParamsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cPathParamsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cPathParamsAttributeParamRefParserRuleCall_7_1_0 = (RuleCall)cPathParamsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cQueryParamsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cQueryParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cQueryParamsAttributeParamRefParserRuleCall_8_1_0 = (RuleCall)cQueryParamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPayloadKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cPayloadAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cPayloadAttributeParamRefParserRuleCall_9_1_0 = (RuleCall)cPayloadAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cResponseKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cResponseAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cResponseAttributeCrossReference_10_1_0 = (CrossReference)cResponseAssignment_10_1.eContents().get(0);
		private final RuleCall cResponseAttributeQualifiedNameParserRuleCall_10_1_0_1 = (RuleCall)cResponseAttributeCrossReference_10_1_0.eContents().get(1);
		
		//HttpServerAceRead:
		//    name = ID '<' model = [ Model | QualifiedName ] '>'
		//    type = ReadFunctionType
		//    url = STRING
		//    authorize ?= 'authorize'?
		//    ('pathParams' (pathParams += AttributeParamRef)*)?
		//    ('queryParams' (queryParams += AttributeParamRef)*)?
		//    ('payload' (payload += AttributeParamRef)*)?
		//    ('response' (response += [Attribute | QualifiedName])*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID '<' model = [ Model | QualifiedName ] '>'
		//type = ReadFunctionType
		//url = STRING
		//authorize ?= 'authorize'?
		//('pathParams' (pathParams += AttributeParamRef)*)?
		//('queryParams' (queryParams += AttributeParamRef)*)?
		//('payload' (payload += AttributeParamRef)*)?
		//('response' (response += [Attribute | QualifiedName])*)?
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }
		
		//model = [ Model | QualifiedName ]
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[ Model | QualifiedName ]
		public CrossReference getModelModelCrossReference_2_0() { return cModelModelCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_2_0_1() { return cModelModelQualifiedNameParserRuleCall_2_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
		
		//type = ReadFunctionType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//ReadFunctionType
		public RuleCall getTypeReadFunctionTypeParserRuleCall_4_0() { return cTypeReadFunctionTypeParserRuleCall_4_0; }
		
		//url = STRING
		public Assignment getUrlAssignment_5() { return cUrlAssignment_5; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_5_0() { return cUrlSTRINGTerminalRuleCall_5_0; }
		
		//authorize ?= 'authorize'?
		public Assignment getAuthorizeAssignment_6() { return cAuthorizeAssignment_6; }
		
		//'authorize'
		public Keyword getAuthorizeAuthorizeKeyword_6_0() { return cAuthorizeAuthorizeKeyword_6_0; }
		
		//('pathParams' (pathParams += AttributeParamRef)*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'pathParams'
		public Keyword getPathParamsKeyword_7_0() { return cPathParamsKeyword_7_0; }
		
		//(pathParams += AttributeParamRef)*
		public Assignment getPathParamsAssignment_7_1() { return cPathParamsAssignment_7_1; }
		
		//AttributeParamRef
		public RuleCall getPathParamsAttributeParamRefParserRuleCall_7_1_0() { return cPathParamsAttributeParamRefParserRuleCall_7_1_0; }
		
		//('queryParams' (queryParams += AttributeParamRef)*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'queryParams'
		public Keyword getQueryParamsKeyword_8_0() { return cQueryParamsKeyword_8_0; }
		
		//(queryParams += AttributeParamRef)*
		public Assignment getQueryParamsAssignment_8_1() { return cQueryParamsAssignment_8_1; }
		
		//AttributeParamRef
		public RuleCall getQueryParamsAttributeParamRefParserRuleCall_8_1_0() { return cQueryParamsAttributeParamRefParserRuleCall_8_1_0; }
		
		//('payload' (payload += AttributeParamRef)*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'payload'
		public Keyword getPayloadKeyword_9_0() { return cPayloadKeyword_9_0; }
		
		//(payload += AttributeParamRef)*
		public Assignment getPayloadAssignment_9_1() { return cPayloadAssignment_9_1; }
		
		//AttributeParamRef
		public RuleCall getPayloadAttributeParamRefParserRuleCall_9_1_0() { return cPayloadAttributeParamRefParserRuleCall_9_1_0; }
		
		//('response' (response += [Attribute | QualifiedName])*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'response'
		public Keyword getResponseKeyword_10_0() { return cResponseKeyword_10_0; }
		
		//(response += [Attribute | QualifiedName])*
		public Assignment getResponseAssignment_10_1() { return cResponseAssignment_10_1; }
		
		//[Attribute | QualifiedName]
		public CrossReference getResponseAttributeCrossReference_10_1_0() { return cResponseAttributeCrossReference_10_1_0; }
		
		//QualifiedName
		public RuleCall getResponseAttributeQualifiedNameParserRuleCall_10_1_0_1() { return cResponseAttributeQualifiedNameParserRuleCall_10_1_0_1; }
	}
	public class AttributeParamRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AttributeParamRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNotNullAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cNotNullNotNullKeyword_0_0 = (Keyword)cNotNullAssignment_0.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		
		//AttributeParamRef:
		//    notNull ?= 'NotNull'? attribute = [Attribute | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//notNull ?= 'NotNull'? attribute = [Attribute | QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//notNull ?= 'NotNull'?
		public Assignment getNotNullAssignment_0() { return cNotNullAssignment_0; }
		
		//'NotNull'
		public Keyword getNotNullNotNullKeyword_0_0() { return cNotNullNotNullKeyword_0_0; }
		
		//attribute = [Attribute | QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute | QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
	}
	public class HttpServerViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQueuedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cQueuedQueuedKeyword_0_0 = (Keyword)cQueuedAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRenderFunctionsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRenderFunctionsHttpServerViewFunctionParserRuleCall_2_1_0 = (RuleCall)cRenderFunctionsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//HttpServerView:
		//    queued ?= ('queued')? name = ID
		//    ('{'
		//        (renderFunctions += HttpServerViewFunction)*
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//queued ?= ('queued')? name = ID
		//('{'
		//    (renderFunctions += HttpServerViewFunction)*
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//queued ?= ('queued')?
		public Assignment getQueuedAssignment_0() { return cQueuedAssignment_0; }
		
		//('queued')
		public Keyword getQueuedQueuedKeyword_0_0() { return cQueuedQueuedKeyword_0_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('{'
		//    (renderFunctions += HttpServerViewFunction)*
		//'}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//(renderFunctions += HttpServerViewFunction)*
		public Assignment getRenderFunctionsAssignment_2_1() { return cRenderFunctionsAssignment_2_1; }
		
		//HttpServerViewFunction
		public RuleCall getRenderFunctionsHttpServerViewFunctionParserRuleCall_2_1_0() { return cRenderFunctionsHttpServerViewFunctionParserRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}
	public class HttpServerViewFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.HttpServerViewFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelModelCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cModelModelCrossReference_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//HttpServerViewFunction:
		//    name = ID '(' model = [ Model | QualifiedName ] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID '(' model = [ Model | QualifiedName ] ')'
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//model = [ Model | QualifiedName ]
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[ Model | QualifiedName ]
		public CrossReference getModelModelCrossReference_2_0() { return cModelModelCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_2_0_1() { return cModelModelQualifiedNameParserRuleCall_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class AuthUserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AuthUser");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAttributesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_1_1_0 = (RuleCall)cAttributesAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AuthUser:
		//    name = ID
		//     ('{'
		//        attributes += Attribute*
		//    '}')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID
		// ('{'
		//    attributes += Attribute*
		//'}')
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		// ('{'
		//    attributes += Attribute*
		//'}')
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//attributes += Attribute*
		public Assignment getAttributesAssignment_1_1() { return cAttributesAssignment_1_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_1_1_0() { return cAttributesAttributeParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPersistentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPersistentPersistentKeyword_0_0 = (Keyword)cPersistentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperModelsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperModelsModelCrossReference_2_1_0 = (CrossReference)cSuperModelsAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cSuperModelsModelCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSuperModelsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cSuperModelsModelCrossReference_2_2_1_0 = (CrossReference)cSuperModelsAssignment_2_2_1.eContents().get(0);
		private final RuleCall cSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cSuperModelsModelCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_3_1_0 = (RuleCall)cAttributesAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//Model:
		//    persistent ?= 'persistent'? name = ID ('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )? ('{'
		//        attributes += Attribute*
		//    '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//persistent ?= 'persistent'? name = ID ('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )? ('{'
		//    attributes += Attribute*
		//'}')?
		public Group getGroup() { return cGroup; }
		
		//persistent ?= 'persistent'?
		public Assignment getPersistentAssignment_0() { return cPersistentAssignment_0; }
		
		//'persistent'
		public Keyword getPersistentPersistentKeyword_0_0() { return cPersistentPersistentKeyword_0_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'extends'
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }
		
		//superModels+=[Model|QualifiedName]
		public Assignment getSuperModelsAssignment_2_1() { return cSuperModelsAssignment_2_1; }
		
		//[Model|QualifiedName]
		public CrossReference getSuperModelsModelCrossReference_2_1_0() { return cSuperModelsModelCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1() { return cSuperModelsModelQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' superModels+=[Model|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//superModels+=[Model|QualifiedName]
		public Assignment getSuperModelsAssignment_2_2_1() { return cSuperModelsAssignment_2_2_1; }
		
		//[Model|QualifiedName]
		public CrossReference getSuperModelsModelCrossReference_2_2_1_0() { return cSuperModelsModelCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1() { return cSuperModelsModelQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('{'
		//       attributes += Attribute*
		//   '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//attributes += Attribute*
		public Assignment getAttributesAssignment_3_1() { return cAttributesAssignment_3_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_1_0() { return cAttributesAttributeParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}
	public class ScenarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Scenario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cGIVENKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGivenItemsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cGivenItemsGivenParserRuleCall_1_1_0 = (RuleCall)cGivenItemsAssignment_1_1.eContents().get(0);
		private final Assignment cWhenThenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWhenThenWhenThenParserRuleCall_2_0 = (RuleCall)cWhenThenAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cANDKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWhenThenAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cWhenThenWhenThenParserRuleCall_3_1_0 = (RuleCall)cWhenThenAssignment_3_1.eContents().get(0);
		
		//Scenario:
		//    name = ID
		//    ('GIVEN' (givenItems += Given)* )?
		//    whenThen += WhenThen ('AND' whenThen += WhenThen)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID
		//('GIVEN' (givenItems += Given)* )?
		//whenThen += WhenThen ('AND' whenThen += WhenThen)*
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('GIVEN' (givenItems += Given)* )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_1_0() { return cGIVENKeyword_1_0; }
		
		//(givenItems += Given)*
		public Assignment getGivenItemsAssignment_1_1() { return cGivenItemsAssignment_1_1; }
		
		//Given
		public RuleCall getGivenItemsGivenParserRuleCall_1_1_0() { return cGivenItemsGivenParserRuleCall_1_1_0; }
		
		//whenThen += WhenThen
		public Assignment getWhenThenAssignment_2() { return cWhenThenAssignment_2; }
		
		//WhenThen
		public RuleCall getWhenThenWhenThenParserRuleCall_2_0() { return cWhenThenWhenThenParserRuleCall_2_0; }
		
		//('AND' whenThen += WhenThen)*
		public Group getGroup_3() { return cGroup_3; }
		
		//'AND'
		public Keyword getANDKeyword_3_0() { return cANDKeyword_3_0; }
		
		//whenThen += WhenThen
		public Assignment getWhenThenAssignment_3_1() { return cWhenThenAssignment_3_1; }
		
		//WhenThen
		public RuleCall getWhenThenWhenThenParserRuleCall_3_1_0() { return cWhenThenWhenThenParserRuleCall_3_1_0; }
	}
	public class WhenThenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.WhenThen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWHENKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cWhenBlockAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cWhenBlockWhenBlockParserRuleCall_1_0 = (RuleCall)cWhenBlockAssignment_1.eContents().get(0);
		private final Keyword cTHENKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cThenBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cThenBlockThenBlockParserRuleCall_3_0 = (RuleCall)cThenBlockAssignment_3.eContents().get(0);
		
		//WhenThen:
		//    'WHEN' whenBlock = WhenBlock
		//    'THEN' thenBlock = ThenBlock
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'WHEN' whenBlock = WhenBlock
		//'THEN' thenBlock = ThenBlock
		public Group getGroup() { return cGroup; }
		
		//'WHEN'
		public Keyword getWHENKeyword_0() { return cWHENKeyword_0; }
		
		//whenBlock = WhenBlock
		public Assignment getWhenBlockAssignment_1() { return cWhenBlockAssignment_1; }
		
		//WhenBlock
		public RuleCall getWhenBlockWhenBlockParserRuleCall_1_0() { return cWhenBlockWhenBlockParserRuleCall_1_0; }
		
		//'THEN'
		public Keyword getTHENKeyword_2() { return cTHENKeyword_2; }
		
		//thenBlock = ThenBlock
		public Assignment getThenBlockAssignment_3() { return cThenBlockAssignment_3; }
		
		//ThenBlock
		public RuleCall getThenBlockThenBlockParserRuleCall_3_0() { return cThenBlockThenBlockParserRuleCall_3_0; }
	}
	public class GivenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Given");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGivenRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomCallParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Given:
		//    GivenRef | CustomCall
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//GivenRef | CustomCall
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GivenRef
		public RuleCall getGivenRefParserRuleCall_0() { return cGivenRefParserRuleCall_0; }
		
		//CustomCall
		public RuleCall getCustomCallParserRuleCall_1() { return cCustomCallParserRuleCall_1; }
	}
	public class CustomCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.CustomCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCustomCallNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCustomCallNameIDTerminalRuleCall_0_0 = (RuleCall)cCustomCallNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValuesPrimitiveValueParserRuleCall_2_0_0 = (RuleCall)cValuesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValuesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuesPrimitiveValueParserRuleCall_2_1_1_0 = (RuleCall)cValuesAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cTimesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cTimesINTTerminalRuleCall_4_0_0 = (RuleCall)cTimesAssignment_4_0.eContents().get(0);
		private final Keyword cXKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		
		//CustomCall:
		//    customCallName = ID '(' (values += PrimitiveValue (',' values += PrimitiveValue)*)? ')' (times = INT 'x')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//customCallName = ID '(' (values += PrimitiveValue (',' values += PrimitiveValue)*)? ')' (times = INT 'x')?
		public Group getGroup() { return cGroup; }
		
		//customCallName = ID
		public Assignment getCustomCallNameAssignment_0() { return cCustomCallNameAssignment_0; }
		
		//ID
		public RuleCall getCustomCallNameIDTerminalRuleCall_0_0() { return cCustomCallNameIDTerminalRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(values += PrimitiveValue (',' values += PrimitiveValue)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//values += PrimitiveValue
		public Assignment getValuesAssignment_2_0() { return cValuesAssignment_2_0; }
		
		//PrimitiveValue
		public RuleCall getValuesPrimitiveValueParserRuleCall_2_0_0() { return cValuesPrimitiveValueParserRuleCall_2_0_0; }
		
		//(',' values += PrimitiveValue)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//values += PrimitiveValue
		public Assignment getValuesAssignment_2_1_1() { return cValuesAssignment_2_1_1; }
		
		//PrimitiveValue
		public RuleCall getValuesPrimitiveValueParserRuleCall_2_1_1_0() { return cValuesPrimitiveValueParserRuleCall_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//(times = INT 'x')?
		public Group getGroup_4() { return cGroup_4; }
		
		//times = INT
		public Assignment getTimesAssignment_4_0() { return cTimesAssignment_4_0; }
		
		//INT
		public RuleCall getTimesINTTerminalRuleCall_4_0_0() { return cTimesINTTerminalRuleCall_4_0_0; }
		
		//'x'
		public Keyword getXKeyword_4_1() { return cXKeyword_4_1; }
	}
	public class GivenRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.GivenRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cScenarioAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cScenarioScenarioCrossReference_0_0 = (CrossReference)cScenarioAssignment_0.eContents().get(0);
		private final RuleCall cScenarioScenarioQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cScenarioScenarioCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cTimesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cTimesINTTerminalRuleCall_1_0_0 = (RuleCall)cTimesAssignment_1_0.eContents().get(0);
		private final Keyword cXKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cExcludeGivenAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cExcludeGivenExcludeKeyword_2_0_0 = (Keyword)cExcludeGivenAssignment_2_0.eContents().get(0);
		private final Keyword cGIVENKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//GivenRef:
		//    scenario = [Scenario | QualifiedName] (times = INT 'x')? (excludeGiven ?= 'exclude' 'GIVEN')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//scenario = [Scenario | QualifiedName] (times = INT 'x')? (excludeGiven ?= 'exclude' 'GIVEN')?
		public Group getGroup() { return cGroup; }
		
		//scenario = [Scenario | QualifiedName]
		public Assignment getScenarioAssignment_0() { return cScenarioAssignment_0; }
		
		//[Scenario | QualifiedName]
		public CrossReference getScenarioScenarioCrossReference_0_0() { return cScenarioScenarioCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getScenarioScenarioQualifiedNameParserRuleCall_0_0_1() { return cScenarioScenarioQualifiedNameParserRuleCall_0_0_1; }
		
		//(times = INT 'x')?
		public Group getGroup_1() { return cGroup_1; }
		
		//times = INT
		public Assignment getTimesAssignment_1_0() { return cTimesAssignment_1_0; }
		
		//INT
		public RuleCall getTimesINTTerminalRuleCall_1_0_0() { return cTimesINTTerminalRuleCall_1_0_0; }
		
		//'x'
		public Keyword getXKeyword_1_1() { return cXKeyword_1_1; }
		
		//(excludeGiven ?= 'exclude' 'GIVEN')?
		public Group getGroup_2() { return cGroup_2; }
		
		//excludeGiven ?= 'exclude'
		public Assignment getExcludeGivenAssignment_2_0() { return cExcludeGivenAssignment_2_0; }
		
		//'exclude'
		public Keyword getExcludeGivenExcludeKeyword_2_0_0() { return cExcludeGivenExcludeKeyword_2_0_0; }
		
		//'GIVEN'
		public Keyword getGIVENKeyword_2_1() { return cGIVENKeyword_2_1; }
	}
	public class WhenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.WhenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cActionHttpServerAceCrossReference_0_0 = (CrossReference)cActionAssignment_0.eContents().get(0);
		private final RuleCall cActionHttpServerAceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cActionHttpServerAceCrossReference_0_0.eContents().get(1);
		private final Assignment cDataDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDataDefinitionDataDefinitionParserRuleCall_1_0 = (RuleCall)cDataDefinitionAssignment_1.eContents().get(0);
		private final Assignment cAuthorizationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAuthorizationAuthorizationParserRuleCall_2_0 = (RuleCall)cAuthorizationAssignment_2.eContents().get(0);
		private final Assignment cExtractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExtractionsExtractionParserRuleCall_3_0 = (RuleCall)cExtractionsAssignment_3.eContents().get(0);
		
		//WhenBlock:
		//    action = [HttpServerAce|QualifiedName]
		//    dataDefinition = DataDefinition
		//    (authorization = Authorization)?
		//    extractions += Extraction*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//action = [HttpServerAce|QualifiedName]
		//dataDefinition = DataDefinition
		//(authorization = Authorization)?
		//extractions += Extraction*
		public Group getGroup() { return cGroup; }
		
		//action = [HttpServerAce|QualifiedName]
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }
		
		//[HttpServerAce|QualifiedName]
		public CrossReference getActionHttpServerAceCrossReference_0_0() { return cActionHttpServerAceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getActionHttpServerAceQualifiedNameParserRuleCall_0_0_1() { return cActionHttpServerAceQualifiedNameParserRuleCall_0_0_1; }
		
		//dataDefinition = DataDefinition
		public Assignment getDataDefinitionAssignment_1() { return cDataDefinitionAssignment_1; }
		
		//DataDefinition
		public RuleCall getDataDefinitionDataDefinitionParserRuleCall_1_0() { return cDataDefinitionDataDefinitionParserRuleCall_1_0; }
		
		//(authorization = Authorization)?
		public Assignment getAuthorizationAssignment_2() { return cAuthorizationAssignment_2; }
		
		//Authorization
		public RuleCall getAuthorizationAuthorizationParserRuleCall_2_0() { return cAuthorizationAuthorizationParserRuleCall_2_0; }
		
		//extractions += Extraction*
		public Assignment getExtractionsAssignment_3() { return cExtractionsAssignment_3; }
		
		//Extraction
		public RuleCall getExtractionsExtractionParserRuleCall_3_0() { return cExtractionsExtractionParserRuleCall_3_0; }
	}
	public class ThenBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ThenBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStatusCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStatusCodeINTTerminalRuleCall_0_0 = (RuleCall)cStatusCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cResponseKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cShouldBeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cResponseAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cResponseDataDefinitionParserRuleCall_1_2_0 = (RuleCall)cResponseAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPersistenceKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPersistenceVerificationsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0 = (RuleCall)cPersistenceVerificationsAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVerificationsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVerificationsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVerificationsVerificationParserRuleCall_3_1_0 = (RuleCall)cVerificationsAssignment_3_1.eContents().get(0);
		
		//ThenBlock:
		//    statusCode = INT
		//    ('response' 'shouldBe' response = DataDefinition)?
		//    ('persistence' persistenceVerifications += PersistenceVerification*)?
		//    ('verifications' verifications += Verification*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//statusCode = INT
		//('response' 'shouldBe' response = DataDefinition)?
		//('persistence' persistenceVerifications += PersistenceVerification*)?
		//('verifications' verifications += Verification*)?
		public Group getGroup() { return cGroup; }
		
		//statusCode = INT
		public Assignment getStatusCodeAssignment_0() { return cStatusCodeAssignment_0; }
		
		//INT
		public RuleCall getStatusCodeINTTerminalRuleCall_0_0() { return cStatusCodeINTTerminalRuleCall_0_0; }
		
		//('response' 'shouldBe' response = DataDefinition)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'response'
		public Keyword getResponseKeyword_1_0() { return cResponseKeyword_1_0; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_1_1() { return cShouldBeKeyword_1_1; }
		
		//response = DataDefinition
		public Assignment getResponseAssignment_1_2() { return cResponseAssignment_1_2; }
		
		//DataDefinition
		public RuleCall getResponseDataDefinitionParserRuleCall_1_2_0() { return cResponseDataDefinitionParserRuleCall_1_2_0; }
		
		//('persistence' persistenceVerifications += PersistenceVerification*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'persistence'
		public Keyword getPersistenceKeyword_2_0() { return cPersistenceKeyword_2_0; }
		
		//persistenceVerifications += PersistenceVerification*
		public Assignment getPersistenceVerificationsAssignment_2_1() { return cPersistenceVerificationsAssignment_2_1; }
		
		//PersistenceVerification
		public RuleCall getPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0() { return cPersistenceVerificationsPersistenceVerificationParserRuleCall_2_1_0; }
		
		//('verifications' verifications += Verification*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'verifications'
		public Keyword getVerificationsKeyword_3_0() { return cVerificationsKeyword_3_0; }
		
		//verifications += Verification*
		public Assignment getVerificationsAssignment_3_1() { return cVerificationsAssignment_3_1; }
		
		//Verification
		public RuleCall getVerificationsVerificationParserRuleCall_3_1_0() { return cVerificationsVerificationParserRuleCall_3_1_0; }
	}
	public class PersistenceVerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PersistenceVerification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cModelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cModelModelCrossReference_1_0 = (CrossReference)cModelAssignment_1.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cModelModelCrossReference_1_0.eContents().get(1);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionPersistenceVerificationExpressionParserRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		
		//PersistenceVerification:
		//    name = ID model = [Model | QualifiedName] expression = PersistenceVerificationExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID model = [Model | QualifiedName] expression = PersistenceVerificationExpression
		public Group getGroup() { return cGroup; }
		
		//name = ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//model = [Model | QualifiedName]
		public Assignment getModelAssignment_1() { return cModelAssignment_1; }
		
		//[Model | QualifiedName]
		public CrossReference getModelModelCrossReference_1_0() { return cModelModelCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_1_0_1() { return cModelModelQualifiedNameParserRuleCall_1_0_1; }
		
		//expression = PersistenceVerificationExpression
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }
		
		//PersistenceVerificationExpression
		public RuleCall getExpressionPersistenceVerificationExpressionParserRuleCall_2_0() { return cExpressionPersistenceVerificationExpressionParserRuleCall_2_0; }
	}
	public class PersistenceVerificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PersistenceVerificationExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSelectByUniqueAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSelectByPrimaryKeysParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCountParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PersistenceVerificationExpression:
		//    SelectByUniqueAttribute | SelectByPrimaryKeys | Count
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SelectByUniqueAttribute | SelectByPrimaryKeys | Count
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SelectByUniqueAttribute
		public RuleCall getSelectByUniqueAttributeParserRuleCall_0() { return cSelectByUniqueAttributeParserRuleCall_0; }
		
		//SelectByPrimaryKeys
		public RuleCall getSelectByPrimaryKeysParserRuleCall_1() { return cSelectByPrimaryKeysParserRuleCall_1; }
		
		//Count
		public RuleCall getCountParserRuleCall_2() { return cCountParserRuleCall_2; }
	}
	public class SelectByPrimaryKeysElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByPrimaryKeys");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectByPrimaryKeyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributeAndValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0 = (RuleCall)cAttributeAndValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cShouldBeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpectedAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpectedSelectByExpectationParserRuleCall_6_0 = (RuleCall)cExpectedAssignment_6.eContents().get(0);
		
		//SelectByPrimaryKeys:
		//    'selectByPrimaryKey' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = SelectByExpectation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'selectByPrimaryKey' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = SelectByExpectation
		public Group getGroup() { return cGroup; }
		
		//'selectByPrimaryKey'
		public Keyword getSelectByPrimaryKeyKeyword_0() { return cSelectByPrimaryKeyKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValues += AttributeAndValue
		public Assignment getAttributeAndValuesAssignment_2() { return cAttributeAndValuesAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_2_0; }
		
		//(',' attributeAndValues += AttributeAndValue*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//attributeAndValues += AttributeAndValue*
		public Assignment getAttributeAndValuesAssignment_3_1() { return cAttributeAndValuesAssignment_3_1; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_5() { return cShouldBeKeyword_5; }
		
		//expected = SelectByExpectation
		public Assignment getExpectedAssignment_6() { return cExpectedAssignment_6; }
		
		//SelectByExpectation
		public RuleCall getExpectedSelectByExpectationParserRuleCall_6_0() { return cExpectedSelectByExpectationParserRuleCall_6_0; }
	}
	public class SelectByUniqueAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByUniqueAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelectByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValueAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValueAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cShouldBeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpectedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpectedSelectByExpectationParserRuleCall_5_0 = (RuleCall)cExpectedAssignment_5.eContents().get(0);
		
		//SelectByUniqueAttribute:
		//    'selectBy' '(' attributeAndValue = AttributeAndValue ')' 'shouldBe' expected = SelectByExpectation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'selectBy' '(' attributeAndValue = AttributeAndValue ')' 'shouldBe' expected = SelectByExpectation
		public Group getGroup() { return cGroup; }
		
		//'selectBy'
		public Keyword getSelectByKeyword_0() { return cSelectByKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValue = AttributeAndValue
		public Assignment getAttributeAndValueAssignment_2() { return cAttributeAndValueAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValueAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValueAttributeAndValueParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_4() { return cShouldBeKeyword_4; }
		
		//expected = SelectByExpectation
		public Assignment getExpectedAssignment_5() { return cExpectedAssignment_5; }
		
		//SelectByExpectation
		public RuleCall getExpectedSelectByExpectationParserRuleCall_5_0() { return cExpectedSelectByExpectationParserRuleCall_5_0; }
	}
	public class CountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Count");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterAndCountByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAndValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_2_0 = (RuleCall)cAttributeAndValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAttributeAndValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0 = (RuleCall)cAttributeAndValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cShouldBeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpectedAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpectedINTTerminalRuleCall_6_0 = (RuleCall)cExpectedAssignment_6.eContents().get(0);
		
		//Count:
		//    'filterAndCountBy' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'filterAndCountBy' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = INT
		public Group getGroup() { return cGroup; }
		
		//'filterAndCountBy'
		public Keyword getFilterAndCountByKeyword_0() { return cFilterAndCountByKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attributeAndValues += AttributeAndValue
		public Assignment getAttributeAndValuesAssignment_2() { return cAttributeAndValuesAssignment_2; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_2_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_2_0; }
		
		//(',' attributeAndValues += AttributeAndValue*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//attributeAndValues += AttributeAndValue*
		public Assignment getAttributeAndValuesAssignment_3_1() { return cAttributeAndValuesAssignment_3_1; }
		
		//AttributeAndValue
		public RuleCall getAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0() { return cAttributeAndValuesAttributeAndValueParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'shouldBe'
		public Keyword getShouldBeKeyword_5() { return cShouldBeKeyword_5; }
		
		//expected = INT
		public Assignment getExpectedAssignment_6() { return cExpectedAssignment_6; }
		
		//INT
		public RuleCall getExpectedINTTerminalRuleCall_6_0() { return cExpectedINTTerminalRuleCall_6_0; }
	}
	public class AttributeAndValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.AttributeAndValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuePrimitiveValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AttributeAndValue:
		//    attribute = [Attribute|QualifiedName] ':' value = PrimitiveValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute = [Attribute|QualifiedName] ':' value = PrimitiveValue
		public Group getGroup() { return cGroup; }
		
		//attribute = [Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value = PrimitiveValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//PrimitiveValue
		public RuleCall getValuePrimitiveValueParserRuleCall_2_0() { return cValuePrimitiveValueParserRuleCall_2_0; }
	}
	public class VerificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Verification");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Verification:
		//    name = ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name = ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ExtractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Extraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExtractKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Extraction:
		//    'extract' name = ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'extract' name = ID
		public Group getGroup() { return cGroup; }
		
		//'extract'
		public Keyword getExtractKeyword_0() { return cExtractKeyword_0; }
		
		//name = ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class SelectByExpectationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.SelectByExpectation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cObjectJsonObjectParserRuleCall_0_0 = (RuleCall)cObjectAssignment_0.eContents().get(0);
		private final Assignment cIsNotNullAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsNotNullNotNullKeyword_1_0 = (Keyword)cIsNotNullAssignment_1.eContents().get(0);
		private final Assignment cIsNullAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cIsNullNullKeyword_2_0 = (Keyword)cIsNullAssignment_2.eContents().get(0);
		
		//SelectByExpectation:
		//    object = JsonObject | isNotNull ?= 'notNull' | isNull ?= 'null'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//object = JsonObject | isNotNull ?= 'notNull' | isNull ?= 'null'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//object = JsonObject
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }
		
		//JsonObject
		public RuleCall getObjectJsonObjectParserRuleCall_0_0() { return cObjectJsonObjectParserRuleCall_0_0; }
		
		//isNotNull ?= 'notNull'
		public Assignment getIsNotNullAssignment_1() { return cIsNotNullAssignment_1; }
		
		//'notNull'
		public Keyword getIsNotNullNotNullKeyword_1_0() { return cIsNotNullNotNullKeyword_1_0; }
		
		//isNull ?= 'null'
		public Assignment getIsNullAssignment_2() { return cIsNullAssignment_2; }
		
		//'null'
		public Keyword getIsNullNullKeyword_2_0() { return cIsNullNullKeyword_2_0; }
	}
	public class DataDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.DataDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cUuidKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUuidAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUuidSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cUuidAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSystemTimeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSystemtimeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSystemtimeSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cSystemtimeAssignment_2_1.eContents().get(0);
		private final Assignment cPatternAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cPatternSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cPatternAssignment_2_2.eContents().get(0);
		private final Assignment cDataAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDataJsonObjectParserRuleCall_3_0 = (RuleCall)cDataAssignment_3.eContents().get(0);
		
		//DataDefinition:
		//    {DataDefinition}
		//    ('uuid' uuid = STRING)?
		//    ('systemTime' systemtime = STRING pattern = STRING)?
		//    (data = JsonObject)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{DataDefinition}
		//('uuid' uuid = STRING)?
		//('systemTime' systemtime = STRING pattern = STRING)?
		//(data = JsonObject)?
		public Group getGroup() { return cGroup; }
		
		//{DataDefinition}
		public Action getDataDefinitionAction_0() { return cDataDefinitionAction_0; }
		
		//('uuid' uuid = STRING)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'uuid'
		public Keyword getUuidKeyword_1_0() { return cUuidKeyword_1_0; }
		
		//uuid = STRING
		public Assignment getUuidAssignment_1_1() { return cUuidAssignment_1_1; }
		
		//STRING
		public RuleCall getUuidSTRINGTerminalRuleCall_1_1_0() { return cUuidSTRINGTerminalRuleCall_1_1_0; }
		
		//('systemTime' systemtime = STRING pattern = STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'systemTime'
		public Keyword getSystemTimeKeyword_2_0() { return cSystemTimeKeyword_2_0; }
		
		//systemtime = STRING
		public Assignment getSystemtimeAssignment_2_1() { return cSystemtimeAssignment_2_1; }
		
		//STRING
		public RuleCall getSystemtimeSTRINGTerminalRuleCall_2_1_0() { return cSystemtimeSTRINGTerminalRuleCall_2_1_0; }
		
		//pattern = STRING
		public Assignment getPatternAssignment_2_2() { return cPatternAssignment_2_2; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_2_2_0() { return cPatternSTRINGTerminalRuleCall_2_2_0; }
		
		//(data = JsonObject)?
		public Assignment getDataAssignment_3() { return cDataAssignment_3; }
		
		//JsonObject
		public RuleCall getDataJsonObjectParserRuleCall_3_0() { return cDataJsonObjectParserRuleCall_3_0; }
	}
	public class AuthorizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Authorization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthorizationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUsernameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_1_0 = (RuleCall)cUsernameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPasswordAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_3_0 = (RuleCall)cPasswordAssignment_3.eContents().get(0);
		
		//Authorization:
		//    'authorization' username = STRING ':' password = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'authorization' username = STRING ':' password = STRING
		public Group getGroup() { return cGroup; }
		
		//'authorization'
		public Keyword getAuthorizationKeyword_0() { return cAuthorizationKeyword_0; }
		
		//username = STRING
		public Assignment getUsernameAssignment_1() { return cUsernameAssignment_1; }
		
		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_1_0() { return cUsernameSTRINGTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//password = STRING
		public Assignment getPasswordAssignment_3() { return cPasswordAssignment_3; }
		
		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_3_0() { return cPasswordSTRINGTerminalRuleCall_3_0; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUniqueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_0_0 = (Keyword)cUniqueAssignment_0.eContents().get(0);
		private final Assignment cPrimaryKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPrimaryKeyPrimaryKeyKeyword_1_0 = (Keyword)cPrimaryKeyAssignment_1.eContents().get(0);
		private final Assignment cNotNullAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNotNullNotNullKeyword_2_0 = (Keyword)cNotNullAssignment_2.eContents().get(0);
		private final Assignment cListAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cListListKeyword_3_0 = (Keyword)cListAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cTypeTypeParserRuleCall_4_0_0 = (RuleCall)cTypeAssignment_4_0.eContents().get(0);
		private final Assignment cModelAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final CrossReference cModelModelCrossReference_4_1_0 = (CrossReference)cModelAssignment_4_1.eContents().get(0);
		private final RuleCall cModelModelQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cModelModelCrossReference_4_1_0.eContents().get(1);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReferencesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cForeignKeyAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cForeignKeyAttributeCrossReference_6_1_0 = (CrossReference)cForeignKeyAssignment_6_1.eContents().get(0);
		private final RuleCall cForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cForeignKeyAttributeCrossReference_6_1_0.eContents().get(1);
		private final Assignment cSquishyAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cSquishySquishyKeyword_7_0 = (Keyword)cSquishyAssignment_7.eContents().get(0);
		
		//Attribute:
		//    unique ?= 'Unique'?
		//    primaryKey ?= 'PrimaryKey'?
		//    notNull ?= 'NotNull'?
		//    list ?= 'List'?
		//    (type = Type | model = [Model | QualifiedName])
		//    name = ID
		//    ('references' foreignKey = [Attribute | QualifiedName])?
		//    squishy ?= 'squishy'?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//unique ?= 'Unique'?
		//primaryKey ?= 'PrimaryKey'?
		//notNull ?= 'NotNull'?
		//list ?= 'List'?
		//(type = Type | model = [Model | QualifiedName])
		//name = ID
		//('references' foreignKey = [Attribute | QualifiedName])?
		//squishy ?= 'squishy'?
		public Group getGroup() { return cGroup; }
		
		//unique ?= 'Unique'?
		public Assignment getUniqueAssignment_0() { return cUniqueAssignment_0; }
		
		//'Unique'
		public Keyword getUniqueUniqueKeyword_0_0() { return cUniqueUniqueKeyword_0_0; }
		
		//primaryKey ?= 'PrimaryKey'?
		public Assignment getPrimaryKeyAssignment_1() { return cPrimaryKeyAssignment_1; }
		
		//'PrimaryKey'
		public Keyword getPrimaryKeyPrimaryKeyKeyword_1_0() { return cPrimaryKeyPrimaryKeyKeyword_1_0; }
		
		//notNull ?= 'NotNull'?
		public Assignment getNotNullAssignment_2() { return cNotNullAssignment_2; }
		
		//'NotNull'
		public Keyword getNotNullNotNullKeyword_2_0() { return cNotNullNotNullKeyword_2_0; }
		
		//list ?= 'List'?
		public Assignment getListAssignment_3() { return cListAssignment_3; }
		
		//'List'
		public Keyword getListListKeyword_3_0() { return cListListKeyword_3_0; }
		
		//(type = Type | model = [Model | QualifiedName])
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//type = Type
		public Assignment getTypeAssignment_4_0() { return cTypeAssignment_4_0; }
		
		//Type
		public RuleCall getTypeTypeParserRuleCall_4_0_0() { return cTypeTypeParserRuleCall_4_0_0; }
		
		//model = [Model | QualifiedName]
		public Assignment getModelAssignment_4_1() { return cModelAssignment_4_1; }
		
		//[Model | QualifiedName]
		public CrossReference getModelModelCrossReference_4_1_0() { return cModelModelCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getModelModelQualifiedNameParserRuleCall_4_1_0_1() { return cModelModelQualifiedNameParserRuleCall_4_1_0_1; }
		
		//name = ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//('references' foreignKey = [Attribute | QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'references'
		public Keyword getReferencesKeyword_6_0() { return cReferencesKeyword_6_0; }
		
		//foreignKey = [Attribute | QualifiedName]
		public Assignment getForeignKeyAssignment_6_1() { return cForeignKeyAssignment_6_1; }
		
		//[Attribute | QualifiedName]
		public CrossReference getForeignKeyAttributeCrossReference_6_1_0() { return cForeignKeyAttributeCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1() { return cForeignKeyAttributeQualifiedNameParserRuleCall_6_1_0_1; }
		
		//squishy ?= 'squishy'?
		public Assignment getSquishyAssignment_7() { return cSquishyAssignment_7; }
		
		//'squishy'
		public Keyword getSquishySquishyKeyword_7_0() { return cSquishySquishyKeyword_7_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//  ID ('.' ID)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class WriteFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.WriteFunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPOSTKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPUTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDELETEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//WriteFunctionType:
		//    'POST' | 'PUT' | 'DELETE'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'POST' | 'PUT' | 'DELETE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'POST'
		public Keyword getPOSTKeyword_0() { return cPOSTKeyword_0; }
		
		//'PUT'
		public Keyword getPUTKeyword_1() { return cPUTKeyword_1; }
		
		//'DELETE'
		public Keyword getDELETEKeyword_2() { return cDELETEKeyword_2; }
	}
	public class ReadFunctionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.ReadFunctionType");
		private final Keyword cGETKeyword = (Keyword)rule.eContents().get(1);
		
		//ReadFunctionType:
		//    'GET'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'GET'
		public Keyword getGETKeyword() { return cGETKeyword; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cIntegerKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFloatKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cBooleanKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDateTimeKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cLongKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cFormDataKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		
		//Type:
		//    'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long' | 'FormData'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long' | 'FormData'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Integer'
		public Keyword getIntegerKeyword_0() { return cIntegerKeyword_0; }
		
		//'String'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
		
		//'Float'
		public Keyword getFloatKeyword_2() { return cFloatKeyword_2; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_3() { return cBooleanKeyword_3; }
		
		//'DateTime'
		public Keyword getDateTimeKeyword_4() { return cDateTimeKeyword_4; }
		
		//'Long'
		public Keyword getLongKeyword_5() { return cLongKeyword_5; }
		
		//'FormData'
		public Keyword getFormDataKeyword_6() { return cFormDataKeyword_6; }
	}
	public class JsonObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonObjectAceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cJsonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cStringTypeParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//JsonObject: JsonObjectAce | 'json' StringType;
		@Override public ParserRule getRule() { return rule; }
		
		//JsonObjectAce | 'json' StringType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JsonObjectAce
		public RuleCall getJsonObjectAceParserRuleCall_0() { return cJsonObjectAceParserRuleCall_0; }
		
		//'json' StringType
		public Group getGroup_1() { return cGroup_1; }
		
		//'json'
		public Keyword getJsonKeyword_1_0() { return cJsonKeyword_1_0; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_1_1() { return cStringTypeParserRuleCall_1_1; }
	}
	public class JsonObjectAceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonObjectAce");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonObjectAceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersJsonMemberParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMembersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMembersJsonMemberParserRuleCall_3_1_0 = (RuleCall)cMembersAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonObjectAce:
		//    {JsonObjectAce} '{'
		//        (members+=JsonMember)?
		//        (',' members+=JsonMember)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonObjectAce} '{'
		//    (members+=JsonMember)?
		//    (',' members+=JsonMember)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{JsonObjectAce}
		public Action getJsonObjectAceAction_0() { return cJsonObjectAceAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(members+=JsonMember)?
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }
		
		//JsonMember
		public RuleCall getMembersJsonMemberParserRuleCall_2_0() { return cMembersJsonMemberParserRuleCall_2_0; }
		
		//(',' members+=JsonMember)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//members+=JsonMember
		public Assignment getMembersAssignment_3_1() { return cMembersAssignment_3_1; }
		
		//JsonMember
		public RuleCall getMembersJsonMemberParserRuleCall_3_1_0() { return cMembersJsonMemberParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class JsonMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonMember:
		//    attribute=[Attribute | QualifiedName] ':' value=JsonValue;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute | QualifiedName] ':' value=JsonValue
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute | QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute | QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=JsonValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//JsonValue
		public RuleCall getValueJsonValueParserRuleCall_2_0() { return cValueJsonValueParserRuleCall_2_0; }
	}
	public class JsonValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonObjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonArrayParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cNullTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLongTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJsonDateTimeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//JsonValue:
		//    JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime;
		@Override public ParserRule getRule() { return rule; }
		
		//JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JsonObject
		public RuleCall getJsonObjectParserRuleCall_0() { return cJsonObjectParserRuleCall_0; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_1() { return cStringTypeParserRuleCall_1; }
		
		//JsonArray
		public RuleCall getJsonArrayParserRuleCall_2() { return cJsonArrayParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//NullType
		public RuleCall getNullTypeParserRuleCall_4() { return cNullTypeParserRuleCall_4; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_5() { return cLongTypeParserRuleCall_5; }
		
		//JsonDateTime
		public RuleCall getJsonDateTimeParserRuleCall_6() { return cJsonDateTimeParserRuleCall_6; }
	}
	public class JsonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesJsonValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesJsonValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonArray:
		//    {JsonArray} '[' (values+=JsonValue)? (',' values+=JsonValue)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{JsonArray} '[' (values+=JsonValue)? (',' values+=JsonValue)* ']'
		public Group getGroup() { return cGroup; }
		
		//{JsonArray}
		public Action getJsonArrayAction_0() { return cJsonArrayAction_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(values+=JsonValue)?
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }
		
		//JsonValue
		public RuleCall getValuesJsonValueParserRuleCall_2_0() { return cValuesJsonValueParserRuleCall_2_0; }
		
		//(',' values+=JsonValue)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//values+=JsonValue
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }
		
		//JsonValue
		public RuleCall getValuesJsonValueParserRuleCall_3_1_0() { return cValuesJsonValueParserRuleCall_3_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class JsonDateTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonDateTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDateTimeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDateTimeSTRINGTerminalRuleCall_0_0 = (RuleCall)cDateTimeAssignment_0.eContents().get(0);
		private final Assignment cPatternAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPatternSTRINGTerminalRuleCall_1_0 = (RuleCall)cPatternAssignment_1.eContents().get(0);
		
		//JsonDateTime:
		//    dateTime = STRING pattern = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//dateTime = STRING pattern = STRING
		public Group getGroup() { return cGroup; }
		
		//dateTime = STRING
		public Assignment getDateTimeAssignment_0() { return cDateTimeAssignment_0; }
		
		//STRING
		public RuleCall getDateTimeSTRINGTerminalRuleCall_0_0() { return cDateTimeSTRINGTerminalRuleCall_0_0; }
		
		//pattern = STRING
		public Assignment getPatternAssignment_1() { return cPatternAssignment_1; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_1_0() { return cPatternSTRINGTerminalRuleCall_1_0; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.StringType");
		private final Assignment cStringAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_0 = (RuleCall)cStringAssignment.eContents().get(0);
		
		//StringType:
		//    string = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//string = STRING
		public Assignment getStringAssignment() { return cStringAssignment; }
		
		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_0() { return cStringSTRINGTerminalRuleCall_0; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.BooleanType");
		private final Assignment cBooleanAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBooleanJsonBooleanParserRuleCall_0 = (RuleCall)cBooleanAssignment.eContents().get(0);
		
		//BooleanType:
		//    boolean = JsonBoolean
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//boolean = JsonBoolean
		public Assignment getBooleanAssignment() { return cBooleanAssignment; }
		
		//JsonBoolean
		public RuleCall getBooleanJsonBooleanParserRuleCall_0() { return cBooleanJsonBooleanParserRuleCall_0; }
	}
	public class NullTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.NullType");
		private final Assignment cNullAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullAssignment.eContents().get(0);
		
		//NullType:
		//    null ?= 'null'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//null ?= 'null'
		public Assignment getNullAssignment() { return cNullAssignment; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	public class UndefinedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.UndefinedType");
		private final Assignment cUndefinedAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cUndefinedUndefinedKeyword_0 = (Keyword)cUndefinedAssignment.eContents().get(0);
		
		//UndefinedType:
		//    undefined ?= 'undefined'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//undefined ?= 'undefined'
		public Assignment getUndefinedAssignment() { return cUndefinedAssignment; }
		
		//'undefined'
		public Keyword getUndefinedUndefinedKeyword_0() { return cUndefinedUndefinedKeyword_0; }
	}
	public class LongTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.LongType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMinusAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cMinusHyphenMinusKeyword_0_0 = (Keyword)cMinusAssignment_0.eContents().get(0);
		private final Assignment cLongAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLongINTTerminalRuleCall_1_0 = (RuleCall)cLongAssignment_1.eContents().get(0);
		
		//LongType:
		//    minus ?= '-'? long = INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//minus ?= '-'? long = INT
		public Group getGroup() { return cGroup; }
		
		//minus ?= '-'?
		public Assignment getMinusAssignment_0() { return cMinusAssignment_0; }
		
		//'-'
		public Keyword getMinusHyphenMinusKeyword_0_0() { return cMinusHyphenMinusKeyword_0_0; }
		
		//long = INT
		public Assignment getLongAssignment_1() { return cLongAssignment_1; }
		
		//INT
		public RuleCall getLongINTTerminalRuleCall_1_0() { return cLongINTTerminalRuleCall_1_0; }
	}
	public class JsonBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.JsonBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//JsonBoolean:
		//  'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class PrimitiveValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.acegen.AceGen.PrimitiveValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cStringAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_0_0 = (RuleCall)cStringAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cMinusAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cMinusHyphenMinusKeyword_1_0_0 = (Keyword)cMinusAssignment_1_0.eContents().get(0);
		private final Assignment cLongAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLongINTTerminalRuleCall_1_1_0 = (RuleCall)cLongAssignment_1_1.eContents().get(0);
		
		//PrimitiveValue:
		//    string = STRING | ( minus ?= '-'? long =  INT)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//string = STRING | ( minus ?= '-'? long =  INT)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//string = STRING
		public Assignment getStringAssignment_0() { return cStringAssignment_0; }
		
		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_0_0() { return cStringSTRINGTerminalRuleCall_0_0; }
		
		//( minus ?= '-'? long =  INT)
		public Group getGroup_1() { return cGroup_1; }
		
		//minus ?= '-'?
		public Assignment getMinusAssignment_1_0() { return cMinusAssignment_1_0; }
		
		//'-'
		public Keyword getMinusHyphenMinusKeyword_1_0_0() { return cMinusHyphenMinusKeyword_1_0_0; }
		
		//long =  INT
		public Assignment getLongAssignment_1_1() { return cLongAssignment_1_1; }
		
		//INT
		public RuleCall getLongINTTerminalRuleCall_1_1_0() { return cLongINTTerminalRuleCall_1_1_0; }
	}
	
	
	private final ProjectElements pProject;
	private final HttpClientElements pHttpClient;
	private final HttpClientAceElements pHttpClientAce;
	private final FromAppStateRefElements pFromAppStateRef;
	private final InputElements pInput;
	private final HttpClientOutcomeElements pHttpClientOutcome;
	private final TriggerdAceOperationElements pTriggerdAceOperation;
	private final HttpClientStateFunctionElements pHttpClientStateFunction;
	private final HttpClientStateFunctionTypeElements pHttpClientStateFunctionType;
	private final ClientAttributeElements pClientAttribute;
	private final UiActionElements pUiAction;
	private final UIElementElements pUIElement;
	private final ClientScenarioElements pClientScenario;
	private final ClientWhenThenElements pClientWhenThen;
	private final ClientGivenRefElements pClientGivenRef;
	private final ClientWhenBlockElements pClientWhenBlock;
	private final SquishyValueElements pSquishyValue;
	private final InputValueElements pInputValue;
	private final ClientThenBlockElements pClientThenBlock;
	private final StateVerificationElements pStateVerification;
	private final CustomVerificationElements pCustomVerification;
	private final JsonObjectClientElements pJsonObjectClient;
	private final JsonMemberClientElements pJsonMemberClient;
	private final JsonValueClientElements pJsonValueClient;
	private final JsonArrayClientElements pJsonArrayClient;
	private final HttpServerElements pHttpServer;
	private final HttpServerAceElements pHttpServerAce;
	private final HttpServerAceWriteElements pHttpServerAceWrite;
	private final HttpServerOutcomeElements pHttpServerOutcome;
	private final HttpServerAceReadElements pHttpServerAceRead;
	private final AttributeParamRefElements pAttributeParamRef;
	private final HttpServerViewElements pHttpServerView;
	private final HttpServerViewFunctionElements pHttpServerViewFunction;
	private final AuthUserElements pAuthUser;
	private final ModelElements pModel;
	private final ScenarioElements pScenario;
	private final WhenThenElements pWhenThen;
	private final GivenElements pGiven;
	private final CustomCallElements pCustomCall;
	private final GivenRefElements pGivenRef;
	private final WhenBlockElements pWhenBlock;
	private final ThenBlockElements pThenBlock;
	private final PersistenceVerificationElements pPersistenceVerification;
	private final PersistenceVerificationExpressionElements pPersistenceVerificationExpression;
	private final SelectByPrimaryKeysElements pSelectByPrimaryKeys;
	private final SelectByUniqueAttributeElements pSelectByUniqueAttribute;
	private final CountElements pCount;
	private final AttributeAndValueElements pAttributeAndValue;
	private final VerificationElements pVerification;
	private final ExtractionElements pExtraction;
	private final SelectByExpectationElements pSelectByExpectation;
	private final DataDefinitionElements pDataDefinition;
	private final AuthorizationElements pAuthorization;
	private final AttributeElements pAttribute;
	private final QualifiedNameElements pQualifiedName;
	private final WriteFunctionTypeElements pWriteFunctionType;
	private final ReadFunctionTypeElements pReadFunctionType;
	private final TypeElements pType;
	private final JsonObjectElements pJsonObject;
	private final JsonObjectAceElements pJsonObjectAce;
	private final JsonMemberElements pJsonMember;
	private final JsonValueElements pJsonValue;
	private final JsonArrayElements pJsonArray;
	private final JsonDateTimeElements pJsonDateTime;
	private final StringTypeElements pStringType;
	private final BooleanTypeElements pBooleanType;
	private final NullTypeElements pNullType;
	private final UndefinedTypeElements pUndefinedType;
	private final LongTypeElements pLongType;
	private final JsonBooleanElements pJsonBoolean;
	private final PrimitiveValueElements pPrimitiveValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AceGenGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProject = new ProjectElements();
		this.pHttpClient = new HttpClientElements();
		this.pHttpClientAce = new HttpClientAceElements();
		this.pFromAppStateRef = new FromAppStateRefElements();
		this.pInput = new InputElements();
		this.pHttpClientOutcome = new HttpClientOutcomeElements();
		this.pTriggerdAceOperation = new TriggerdAceOperationElements();
		this.pHttpClientStateFunction = new HttpClientStateFunctionElements();
		this.pHttpClientStateFunctionType = new HttpClientStateFunctionTypeElements();
		this.pClientAttribute = new ClientAttributeElements();
		this.pUiAction = new UiActionElements();
		this.pUIElement = new UIElementElements();
		this.pClientScenario = new ClientScenarioElements();
		this.pClientWhenThen = new ClientWhenThenElements();
		this.pClientGivenRef = new ClientGivenRefElements();
		this.pClientWhenBlock = new ClientWhenBlockElements();
		this.pSquishyValue = new SquishyValueElements();
		this.pInputValue = new InputValueElements();
		this.pClientThenBlock = new ClientThenBlockElements();
		this.pStateVerification = new StateVerificationElements();
		this.pCustomVerification = new CustomVerificationElements();
		this.pJsonObjectClient = new JsonObjectClientElements();
		this.pJsonMemberClient = new JsonMemberClientElements();
		this.pJsonValueClient = new JsonValueClientElements();
		this.pJsonArrayClient = new JsonArrayClientElements();
		this.pHttpServer = new HttpServerElements();
		this.pHttpServerAce = new HttpServerAceElements();
		this.pHttpServerAceWrite = new HttpServerAceWriteElements();
		this.pHttpServerOutcome = new HttpServerOutcomeElements();
		this.pHttpServerAceRead = new HttpServerAceReadElements();
		this.pAttributeParamRef = new AttributeParamRefElements();
		this.pHttpServerView = new HttpServerViewElements();
		this.pHttpServerViewFunction = new HttpServerViewFunctionElements();
		this.pAuthUser = new AuthUserElements();
		this.pModel = new ModelElements();
		this.pScenario = new ScenarioElements();
		this.pWhenThen = new WhenThenElements();
		this.pGiven = new GivenElements();
		this.pCustomCall = new CustomCallElements();
		this.pGivenRef = new GivenRefElements();
		this.pWhenBlock = new WhenBlockElements();
		this.pThenBlock = new ThenBlockElements();
		this.pPersistenceVerification = new PersistenceVerificationElements();
		this.pPersistenceVerificationExpression = new PersistenceVerificationExpressionElements();
		this.pSelectByPrimaryKeys = new SelectByPrimaryKeysElements();
		this.pSelectByUniqueAttribute = new SelectByUniqueAttributeElements();
		this.pCount = new CountElements();
		this.pAttributeAndValue = new AttributeAndValueElements();
		this.pVerification = new VerificationElements();
		this.pExtraction = new ExtractionElements();
		this.pSelectByExpectation = new SelectByExpectationElements();
		this.pDataDefinition = new DataDefinitionElements();
		this.pAuthorization = new AuthorizationElements();
		this.pAttribute = new AttributeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pWriteFunctionType = new WriteFunctionTypeElements();
		this.pReadFunctionType = new ReadFunctionTypeElements();
		this.pType = new TypeElements();
		this.pJsonObject = new JsonObjectElements();
		this.pJsonObjectAce = new JsonObjectAceElements();
		this.pJsonMember = new JsonMemberElements();
		this.pJsonValue = new JsonValueElements();
		this.pJsonArray = new JsonArrayElements();
		this.pJsonDateTime = new JsonDateTimeElements();
		this.pStringType = new StringTypeElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pNullType = new NullTypeElements();
		this.pUndefinedType = new UndefinedTypeElements();
		this.pLongType = new LongTypeElements();
		this.pJsonBoolean = new JsonBooleanElements();
		this.pPrimitiveValue = new PrimitiveValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.acegen.AceGen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Project: {Project}
	//    ('HttpClient' httpClient = HttpClient ? | 'HttpServer' httpServer = HttpServer ?)?
	//;
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//HttpClient:
	//    name = QualifiedName
	//    ('ACE' (aceOperations += HttpClientAce)*)?
	//    ('ui' (jsx ?= 'JSX')?
	//        container = ClientAttribute
	//    )?
	//    ('scenarios' (scenarios += ClientScenario)*)?
	//;
	public HttpClientElements getHttpClientAccess() {
		return pHttpClient;
	}
	
	public ParserRule getHttpClientRule() {
		return getHttpClientAccess().getRule();
	}
	
	//HttpClientAce:
	//    (async ?= 'async')? name = ID
	//        ('(' input += Input (',' input += Input)* ')' )?
	//        ('fromAppState' '(' refs += FromAppStateRef (',' refs += FromAppStateRef)* ')' )?
	//    ('call' serverCall = [HttpServerAce | QualifiedName] )?
	//    ('set' 'loading' loadingIndicators += [ClientAttribute | QualifiedName] (',' loadingIndicators += [ClientAttribute | QualifiedName])* )?
	//    (outcomes += HttpClientOutcome)*
	//;
	public HttpClientAceElements getHttpClientAceAccess() {
		return pHttpClientAce;
	}
	
	public ParserRule getHttpClientAceRule() {
		return getHttpClientAceAccess().getRule();
	}
	
	//FromAppStateRef:
	//    stateElement = [ClientAttribute | QualifiedName] ('as' varName = ID)?
	//;
	public FromAppStateRefElements getFromAppStateRefAccess() {
		return pFromAppStateRef;
	}
	
	public ParserRule getFromAppStateRefRule() {
		return getFromAppStateRefAccess().getRule();
	}
	
	//Input:
	//    name = ID
	//;
	public InputElements getInputAccess() {
		return pInput;
	}
	
	public ParserRule getInputRule() {
		return getInputAccess().getRule();
	}
	
	//HttpClientOutcome:
	//    'on' name = ID
	//    ('('
	//        listeners += HttpClientStateFunction*
	//    ')'    )?
	//    ('triggers' '(' (triggerdAceOperations += TriggerdAceOperation)* ')')?
	//;
	public HttpClientOutcomeElements getHttpClientOutcomeAccess() {
		return pHttpClientOutcome;
	}
	
	public ParserRule getHttpClientOutcomeRule() {
		return getHttpClientOutcomeAccess().getRule();
	}
	
	//TriggerdAceOperation:
	//    ('delayInMillis' delay = INT takeLatest ?= 'takeLatest'? ) ? aceOperation = [HttpClientAce | QualifiedName]
	//;
	public TriggerdAceOperationElements getTriggerdAceOperationAccess() {
		return pTriggerdAceOperation;
	}
	
	public ParserRule getTriggerdAceOperationRule() {
		return getTriggerdAceOperationAccess().getRule();
	}
	
	//HttpClientStateFunction:
	//    stateFunctionType = HttpClientStateFunctionType stateElement = [ClientAttribute | QualifiedName]
	//;
	public HttpClientStateFunctionElements getHttpClientStateFunctionAccess() {
		return pHttpClientStateFunction;
	}
	
	public ParserRule getHttpClientStateFunctionRule() {
		return getHttpClientStateFunctionAccess().getRule();
	}
	
	//HttpClientStateFunctionType:
	//    'set' | 'merge'
	//;
	public HttpClientStateFunctionTypeElements getHttpClientStateFunctionTypeAccess() {
		return pHttpClientStateFunctionType;
	}
	
	public ParserRule getHttpClientStateFunctionTypeRule() {
		return getHttpClientStateFunctionTypeAccess().getRule();
	}
	
	//ClientAttribute:
	//    noComponent ?= 'noComponent'?
	//    list ?= 'List'?
	//    tree ?= 'Tree'?
	//    group ?= 'group'?
	//    listId ?= 'listId'?
	//    name = ID
	//    location ?= 'location'?
	//    storage ?= 'storage'?
	//    fromParent ?= 'fromParent'?
	//    uiElement = UIElement?
	//    ('{'
	//        attributes += ClientAttribute*
	//        ('options' options += STRING*)?
	//        ('actions' '{'
	//            actions += UiAction*
	//        '}')?
	//    '}')?
	//;
	public ClientAttributeElements getClientAttributeAccess() {
		return pClientAttribute;
	}
	
	public ParserRule getClientAttributeRule() {
		return getClientAttributeAccess().getRule();
	}
	
	//UiAction:
	//    name = STRING target = [HttpClientAce | QualifiedName]
	//;
	public UiActionElements getUiActionAccess() {
		return pUiAction;
	}
	
	public ParserRule getUiActionRule() {
		return getUiActionAccess().getRule();
	}
	
	//UIElement:
	//    'TextInput' | 'CheckBox' | 'Select' | 'PasswordInput' | 'Radio' | 'Button'
	//;
	public UIElementElements getUIElementAccess() {
		return pUIElement;
	}
	
	public ParserRule getUIElementRule() {
		return getUIElementAccess().getRule();
	}
	
	//ClientScenario:
	//    name = ID
	//    ('GIVEN' (givenRefs += ClientGivenRef)* )?
	//    clientWhenThen += ClientWhenThen ('AND' clientWhenThen += ClientWhenThen)*
	//;
	public ClientScenarioElements getClientScenarioAccess() {
		return pClientScenario;
	}
	
	public ParserRule getClientScenarioRule() {
		return getClientScenarioAccess().getRule();
	}
	
	//ClientWhenThen:
	//    {ClientWhenThen}
	//    'WHEN' (whenBlock = ClientWhenBlock)? ('delayInMillis' delayInMillis = INT)?
	//    ('THEN' thenBlock = ClientThenBlock)?
	//;
	public ClientWhenThenElements getClientWhenThenAccess() {
		return pClientWhenThen;
	}
	
	public ParserRule getClientWhenThenRule() {
		return getClientWhenThenAccess().getRule();
	}
	
	//ClientGivenRef:
	//    scenario = [ClientScenario | QualifiedName] (excludeGiven ?= 'exclude' 'GIVEN')?
	//;
	public ClientGivenRefElements getClientGivenRefAccess() {
		return pClientGivenRef;
	}
	
	public ParserRule getClientGivenRefRule() {
		return getClientGivenRefAccess().getRule();
	}
	
	//ClientWhenBlock:
	//    action = [HttpClientAce|QualifiedName]
	//    ('(' (inputValues += InputValue (',' inputValues += InputValue)* )? ')')?
	//    ('squishyValues' squishyValues += SquishyValue (',' squishyValues += SquishyValue)*)?
	//;
	public ClientWhenBlockElements getClientWhenBlockAccess() {
		return pClientWhenBlock;
	}
	
	public ParserRule getClientWhenBlockRule() {
		return getClientWhenBlockAccess().getRule();
	}
	
	//SquishyValue:
	//    {SquishyValue} '{'
	//        ('uuid' uuid = STRING
	//        ('clientSystemTime' clientSystemTime = STRING)?
	//        ('serverSystemTime' serverSystemTime = STRING)?
	//        ('squishy' attribute = [Attribute | QualifiedName] ':' value = PrimitiveValue)?)?
	//    '}'
	//;
	public SquishyValueElements getSquishyValueAccess() {
		return pSquishyValue;
	}
	
	public ParserRule getSquishyValueRule() {
		return getSquishyValueAccess().getRule();
	}
	
	//InputValue:
	//    input = [Input | QualifiedName] ':' value = PrimitiveValue
	//;
	public InputValueElements getInputValueAccess() {
		return pInputValue;
	}
	
	public ParserRule getInputValueRule() {
		return getInputValueAccess().getRule();
	}
	
	//ClientThenBlock: {ClientThenBlock}
	//    ('expectedState' stateVerifications += StateVerification*)?
	//    ('verifications' verifications += CustomVerification*)?
	//;
	public ClientThenBlockElements getClientThenBlockAccess() {
		return pClientThenBlock;
	}
	
	public ParserRule getClientThenBlockRule() {
		return getClientThenBlockAccess().getRule();
	}
	
	//StateVerification:
	//    name = ID stateRef = [ClientAttribute | QualifiedName] 'should' (not ?= 'not')? 'be' value = JsonValueClient
	//;
	public StateVerificationElements getStateVerificationAccess() {
		return pStateVerification;
	}
	
	public ParserRule getStateVerificationRule() {
		return getStateVerificationAccess().getRule();
	}
	
	//CustomVerification:
	//    functionName = ID ('(' stateRef = [ClientAttribute | QualifiedName] ')') ?
	//;
	public CustomVerificationElements getCustomVerificationAccess() {
		return pCustomVerification;
	}
	
	public ParserRule getCustomVerificationRule() {
		return getCustomVerificationAccess().getRule();
	}
	
	//JsonObjectClient:
	//    {JsonObjectClient} '{'
	//        (members+=JsonMemberClient)?
	//        (',' members+=JsonMemberClient)*
	//    '}';
	public JsonObjectClientElements getJsonObjectClientAccess() {
		return pJsonObjectClient;
	}
	
	public ParserRule getJsonObjectClientRule() {
		return getJsonObjectClientAccess().getRule();
	}
	
	//JsonMemberClient:
	//    attribute=[ClientAttribute | QualifiedName] ':' value=JsonValueClient;
	public JsonMemberClientElements getJsonMemberClientAccess() {
		return pJsonMemberClient;
	}
	
	public ParserRule getJsonMemberClientRule() {
		return getJsonMemberClientAccess().getRule();
	}
	
	//JsonValueClient:
	//    JsonObjectClient | StringType | JsonArrayClient | BooleanType | NullType | LongType | JsonDateTime | UndefinedType;
	public JsonValueClientElements getJsonValueClientAccess() {
		return pJsonValueClient;
	}
	
	public ParserRule getJsonValueClientRule() {
		return getJsonValueClientAccess().getRule();
	}
	
	//JsonArrayClient:
	//    {JsonArrayClient} '[' (values+=JsonValueClient)? (',' values+=JsonValueClient)* ']';
	public JsonArrayClientElements getJsonArrayClientAccess() {
		return pJsonArrayClient;
	}
	
	public ParserRule getJsonArrayClientRule() {
		return getJsonArrayClientAccess().getRule();
	}
	
	//HttpServer:
	//    java ?= 'Java'?
	//    cs ?= 'C#'?
	//    dropwizard ?= 'Dropwizard'?
	//    dotnet ?= 'dotnet'?
	//    JDBI3 ?= 'JDBI3'?
	//    EF ?= 'EntityFramework'?
	//    liquibase ?= 'Liquibase'?
	//    name = QualifiedName
	//    ('Authorization' authUser = AuthUser)?
	//    ('import' authUserRef = [AuthUser | QualifiedName])?
	//    ('ACE' (aceOperations += HttpServerAce)*    )?
	//    ('views' (views += HttpServerView)* )?
	//    ('models' (models += Model)*)?
	//    ('scenarios' (scenarios += Scenario)*)?
	//;
	public HttpServerElements getHttpServerAccess() {
		return pHttpServer;
	}
	
	public ParserRule getHttpServerRule() {
		return getHttpServerAccess().getRule();
	}
	
	//HttpServerAce:
	//    HttpServerAceWrite | HttpServerAceRead
	//;
	public HttpServerAceElements getHttpServerAceAccess() {
		return pHttpServerAce;
	}
	
	public ParserRule getHttpServerAceRule() {
		return getHttpServerAceAccess().getRule();
	}
	
	//HttpServerAceWrite:
	//    name = ID '<' model = [ Model | QualifiedName ] '>'
	//    type = WriteFunctionType
	//    url = STRING
	//    authorize ?= 'authorize'?
	//    multipartFormData ?= 'multipartFormData'?
	//    ('pathParams' (pathParams += AttributeParamRef)*)?
	//    ('queryParams' (queryParams += AttributeParamRef)*)?
	//    ('payload' (payload += AttributeParamRef)*)?
	//    ('response' (response += [Attribute | QualifiedName])*)?
	//    (outcomes += HttpServerOutcome)*
	//;
	public HttpServerAceWriteElements getHttpServerAceWriteAccess() {
		return pHttpServerAceWrite;
	}
	
	public ParserRule getHttpServerAceWriteRule() {
		return getHttpServerAceWriteAccess().getRule();
	}
	
	//HttpServerOutcome:
	//    'on' name = ID
	//    ('('(listeners += [HttpServerViewFunction | QualifiedName])*')')*
	//;
	public HttpServerOutcomeElements getHttpServerOutcomeAccess() {
		return pHttpServerOutcome;
	}
	
	public ParserRule getHttpServerOutcomeRule() {
		return getHttpServerOutcomeAccess().getRule();
	}
	
	//HttpServerAceRead:
	//    name = ID '<' model = [ Model | QualifiedName ] '>'
	//    type = ReadFunctionType
	//    url = STRING
	//    authorize ?= 'authorize'?
	//    ('pathParams' (pathParams += AttributeParamRef)*)?
	//    ('queryParams' (queryParams += AttributeParamRef)*)?
	//    ('payload' (payload += AttributeParamRef)*)?
	//    ('response' (response += [Attribute | QualifiedName])*)?
	//;
	public HttpServerAceReadElements getHttpServerAceReadAccess() {
		return pHttpServerAceRead;
	}
	
	public ParserRule getHttpServerAceReadRule() {
		return getHttpServerAceReadAccess().getRule();
	}
	
	//AttributeParamRef:
	//    notNull ?= 'NotNull'? attribute = [Attribute | QualifiedName]
	//;
	public AttributeParamRefElements getAttributeParamRefAccess() {
		return pAttributeParamRef;
	}
	
	public ParserRule getAttributeParamRefRule() {
		return getAttributeParamRefAccess().getRule();
	}
	
	//HttpServerView:
	//    queued ?= ('queued')? name = ID
	//    ('{'
	//        (renderFunctions += HttpServerViewFunction)*
	//    '}')?
	//;
	public HttpServerViewElements getHttpServerViewAccess() {
		return pHttpServerView;
	}
	
	public ParserRule getHttpServerViewRule() {
		return getHttpServerViewAccess().getRule();
	}
	
	//HttpServerViewFunction:
	//    name = ID '(' model = [ Model | QualifiedName ] ')'
	//;
	public HttpServerViewFunctionElements getHttpServerViewFunctionAccess() {
		return pHttpServerViewFunction;
	}
	
	public ParserRule getHttpServerViewFunctionRule() {
		return getHttpServerViewFunctionAccess().getRule();
	}
	
	//AuthUser:
	//    name = ID
	//     ('{'
	//        attributes += Attribute*
	//    '}')
	//;
	public AuthUserElements getAuthUserAccess() {
		return pAuthUser;
	}
	
	public ParserRule getAuthUserRule() {
		return getAuthUserAccess().getRule();
	}
	
	//Model:
	//    persistent ?= 'persistent'? name = ID ('extends' superModels+=[Model|QualifiedName] (',' superModels+=[Model|QualifiedName])* )? ('{'
	//        attributes += Attribute*
	//    '}')?
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Scenario:
	//    name = ID
	//    ('GIVEN' (givenItems += Given)* )?
	//    whenThen += WhenThen ('AND' whenThen += WhenThen)*
	//;
	public ScenarioElements getScenarioAccess() {
		return pScenario;
	}
	
	public ParserRule getScenarioRule() {
		return getScenarioAccess().getRule();
	}
	
	//WhenThen:
	//    'WHEN' whenBlock = WhenBlock
	//    'THEN' thenBlock = ThenBlock
	//;
	public WhenThenElements getWhenThenAccess() {
		return pWhenThen;
	}
	
	public ParserRule getWhenThenRule() {
		return getWhenThenAccess().getRule();
	}
	
	//Given:
	//    GivenRef | CustomCall
	//;
	public GivenElements getGivenAccess() {
		return pGiven;
	}
	
	public ParserRule getGivenRule() {
		return getGivenAccess().getRule();
	}
	
	//CustomCall:
	//    customCallName = ID '(' (values += PrimitiveValue (',' values += PrimitiveValue)*)? ')' (times = INT 'x')?
	//;
	public CustomCallElements getCustomCallAccess() {
		return pCustomCall;
	}
	
	public ParserRule getCustomCallRule() {
		return getCustomCallAccess().getRule();
	}
	
	//GivenRef:
	//    scenario = [Scenario | QualifiedName] (times = INT 'x')? (excludeGiven ?= 'exclude' 'GIVEN')?
	//;
	public GivenRefElements getGivenRefAccess() {
		return pGivenRef;
	}
	
	public ParserRule getGivenRefRule() {
		return getGivenRefAccess().getRule();
	}
	
	//WhenBlock:
	//    action = [HttpServerAce|QualifiedName]
	//    dataDefinition = DataDefinition
	//    (authorization = Authorization)?
	//    extractions += Extraction*
	//;
	public WhenBlockElements getWhenBlockAccess() {
		return pWhenBlock;
	}
	
	public ParserRule getWhenBlockRule() {
		return getWhenBlockAccess().getRule();
	}
	
	//ThenBlock:
	//    statusCode = INT
	//    ('response' 'shouldBe' response = DataDefinition)?
	//    ('persistence' persistenceVerifications += PersistenceVerification*)?
	//    ('verifications' verifications += Verification*)?
	//;
	public ThenBlockElements getThenBlockAccess() {
		return pThenBlock;
	}
	
	public ParserRule getThenBlockRule() {
		return getThenBlockAccess().getRule();
	}
	
	//PersistenceVerification:
	//    name = ID model = [Model | QualifiedName] expression = PersistenceVerificationExpression
	//;
	public PersistenceVerificationElements getPersistenceVerificationAccess() {
		return pPersistenceVerification;
	}
	
	public ParserRule getPersistenceVerificationRule() {
		return getPersistenceVerificationAccess().getRule();
	}
	
	//PersistenceVerificationExpression:
	//    SelectByUniqueAttribute | SelectByPrimaryKeys | Count
	//;
	public PersistenceVerificationExpressionElements getPersistenceVerificationExpressionAccess() {
		return pPersistenceVerificationExpression;
	}
	
	public ParserRule getPersistenceVerificationExpressionRule() {
		return getPersistenceVerificationExpressionAccess().getRule();
	}
	
	//SelectByPrimaryKeys:
	//    'selectByPrimaryKey' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = SelectByExpectation
	//;
	public SelectByPrimaryKeysElements getSelectByPrimaryKeysAccess() {
		return pSelectByPrimaryKeys;
	}
	
	public ParserRule getSelectByPrimaryKeysRule() {
		return getSelectByPrimaryKeysAccess().getRule();
	}
	
	//SelectByUniqueAttribute:
	//    'selectBy' '(' attributeAndValue = AttributeAndValue ')' 'shouldBe' expected = SelectByExpectation
	//;
	public SelectByUniqueAttributeElements getSelectByUniqueAttributeAccess() {
		return pSelectByUniqueAttribute;
	}
	
	public ParserRule getSelectByUniqueAttributeRule() {
		return getSelectByUniqueAttributeAccess().getRule();
	}
	
	//Count:
	//    'filterAndCountBy' '(' attributeAndValues += AttributeAndValue (',' attributeAndValues += AttributeAndValue*)? ')' 'shouldBe' expected = INT
	//;
	public CountElements getCountAccess() {
		return pCount;
	}
	
	public ParserRule getCountRule() {
		return getCountAccess().getRule();
	}
	
	//AttributeAndValue:
	//    attribute = [Attribute|QualifiedName] ':' value = PrimitiveValue
	//;
	public AttributeAndValueElements getAttributeAndValueAccess() {
		return pAttributeAndValue;
	}
	
	public ParserRule getAttributeAndValueRule() {
		return getAttributeAndValueAccess().getRule();
	}
	
	//Verification:
	//    name = ID
	//;
	public VerificationElements getVerificationAccess() {
		return pVerification;
	}
	
	public ParserRule getVerificationRule() {
		return getVerificationAccess().getRule();
	}
	
	//Extraction:
	//    'extract' name = ID
	//;
	public ExtractionElements getExtractionAccess() {
		return pExtraction;
	}
	
	public ParserRule getExtractionRule() {
		return getExtractionAccess().getRule();
	}
	
	//SelectByExpectation:
	//    object = JsonObject | isNotNull ?= 'notNull' | isNull ?= 'null'
	//;
	public SelectByExpectationElements getSelectByExpectationAccess() {
		return pSelectByExpectation;
	}
	
	public ParserRule getSelectByExpectationRule() {
		return getSelectByExpectationAccess().getRule();
	}
	
	//DataDefinition:
	//    {DataDefinition}
	//    ('uuid' uuid = STRING)?
	//    ('systemTime' systemtime = STRING pattern = STRING)?
	//    (data = JsonObject)?
	//;
	public DataDefinitionElements getDataDefinitionAccess() {
		return pDataDefinition;
	}
	
	public ParserRule getDataDefinitionRule() {
		return getDataDefinitionAccess().getRule();
	}
	
	//Authorization:
	//    'authorization' username = STRING ':' password = STRING
	//;
	public AuthorizationElements getAuthorizationAccess() {
		return pAuthorization;
	}
	
	public ParserRule getAuthorizationRule() {
		return getAuthorizationAccess().getRule();
	}
	
	//Attribute:
	//    unique ?= 'Unique'?
	//    primaryKey ?= 'PrimaryKey'?
	//    notNull ?= 'NotNull'?
	//    list ?= 'List'?
	//    (type = Type | model = [Model | QualifiedName])
	//    name = ID
	//    ('references' foreignKey = [Attribute | QualifiedName])?
	//    squishy ?= 'squishy'?
	//;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//QualifiedName:
	//  ID ('.' ID)*
	//;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//WriteFunctionType:
	//    'POST' | 'PUT' | 'DELETE'
	//;
	public WriteFunctionTypeElements getWriteFunctionTypeAccess() {
		return pWriteFunctionType;
	}
	
	public ParserRule getWriteFunctionTypeRule() {
		return getWriteFunctionTypeAccess().getRule();
	}
	
	//ReadFunctionType:
	//    'GET'
	//;
	public ReadFunctionTypeElements getReadFunctionTypeAccess() {
		return pReadFunctionType;
	}
	
	public ParserRule getReadFunctionTypeRule() {
		return getReadFunctionTypeAccess().getRule();
	}
	
	//Type:
	//    'Integer' | 'String' | 'Float' | 'Boolean' | 'DateTime' | 'Long' | 'FormData'
	//;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//JsonObject: JsonObjectAce | 'json' StringType;
	public JsonObjectElements getJsonObjectAccess() {
		return pJsonObject;
	}
	
	public ParserRule getJsonObjectRule() {
		return getJsonObjectAccess().getRule();
	}
	
	//JsonObjectAce:
	//    {JsonObjectAce} '{'
	//        (members+=JsonMember)?
	//        (',' members+=JsonMember)*
	//    '}';
	public JsonObjectAceElements getJsonObjectAceAccess() {
		return pJsonObjectAce;
	}
	
	public ParserRule getJsonObjectAceRule() {
		return getJsonObjectAceAccess().getRule();
	}
	
	//JsonMember:
	//    attribute=[Attribute | QualifiedName] ':' value=JsonValue;
	public JsonMemberElements getJsonMemberAccess() {
		return pJsonMember;
	}
	
	public ParserRule getJsonMemberRule() {
		return getJsonMemberAccess().getRule();
	}
	
	//JsonValue:
	//    JsonObject | StringType | JsonArray | BooleanType | NullType | LongType | JsonDateTime;
	public JsonValueElements getJsonValueAccess() {
		return pJsonValue;
	}
	
	public ParserRule getJsonValueRule() {
		return getJsonValueAccess().getRule();
	}
	
	//JsonArray:
	//    {JsonArray} '[' (values+=JsonValue)? (',' values+=JsonValue)* ']';
	public JsonArrayElements getJsonArrayAccess() {
		return pJsonArray;
	}
	
	public ParserRule getJsonArrayRule() {
		return getJsonArrayAccess().getRule();
	}
	
	//JsonDateTime:
	//    dateTime = STRING pattern = STRING
	//;
	public JsonDateTimeElements getJsonDateTimeAccess() {
		return pJsonDateTime;
	}
	
	public ParserRule getJsonDateTimeRule() {
		return getJsonDateTimeAccess().getRule();
	}
	
	//StringType:
	//    string = STRING
	//;
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//BooleanType:
	//    boolean = JsonBoolean
	//;
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//NullType:
	//    null ?= 'null'
	//;
	public NullTypeElements getNullTypeAccess() {
		return pNullType;
	}
	
	public ParserRule getNullTypeRule() {
		return getNullTypeAccess().getRule();
	}
	
	//UndefinedType:
	//    undefined ?= 'undefined'
	//;
	public UndefinedTypeElements getUndefinedTypeAccess() {
		return pUndefinedType;
	}
	
	public ParserRule getUndefinedTypeRule() {
		return getUndefinedTypeAccess().getRule();
	}
	
	//LongType:
	//    minus ?= '-'? long = INT
	//;
	public LongTypeElements getLongTypeAccess() {
		return pLongType;
	}
	
	public ParserRule getLongTypeRule() {
		return getLongTypeAccess().getRule();
	}
	
	//JsonBoolean:
	//  'true' | 'false';
	public JsonBooleanElements getJsonBooleanAccess() {
		return pJsonBoolean;
	}
	
	public ParserRule getJsonBooleanRule() {
		return getJsonBooleanAccess().getRule();
	}
	
	//PrimitiveValue:
	//    string = STRING | ( minus ?= '-'? long =  INT)
	//;
	public PrimitiveValueElements getPrimitiveValueAccess() {
		return pPrimitiveValue;
	}
	
	public ParserRule getPrimitiveValueRule() {
		return getPrimitiveValueAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
