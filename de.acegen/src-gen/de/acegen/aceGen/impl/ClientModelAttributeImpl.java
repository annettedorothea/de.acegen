/**
 * generated by Xtext 2.29.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.ClientModel;
import de.acegen.aceGen.ClientModelAttribute;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Client Model Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isNotNull <em>Not Null</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isList <em>List</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isNoComponent <em>No Component</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isTree <em>Tree</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isExclusiveView <em>Exclusive View</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isListId <em>List Id</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#getModel <em>Model</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isLocation <em>Location</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isStorage <em>Storage</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.ClientModelAttributeImpl#isFromParent <em>From Parent</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClientModelAttributeImpl extends MinimalEObjectImpl.Container implements ClientModelAttribute
{
  /**
   * The default value of the '{@link #isNotNull() <em>Not Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNotNull()
   * @generated
   * @ordered
   */
  protected static final boolean NOT_NULL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNotNull() <em>Not Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNotNull()
   * @generated
   * @ordered
   */
  protected boolean notNull = NOT_NULL_EDEFAULT;

  /**
   * The default value of the '{@link #isList() <em>List</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isList()
   * @generated
   * @ordered
   */
  protected static final boolean LIST_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isList() <em>List</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isList()
   * @generated
   * @ordered
   */
  protected boolean list = LIST_EDEFAULT;

  /**
   * The default value of the '{@link #isNoComponent() <em>No Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNoComponent()
   * @generated
   * @ordered
   */
  protected static final boolean NO_COMPONENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNoComponent() <em>No Component</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNoComponent()
   * @generated
   * @ordered
   */
  protected boolean noComponent = NO_COMPONENT_EDEFAULT;

  /**
   * The default value of the '{@link #isTree() <em>Tree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTree()
   * @generated
   * @ordered
   */
  protected static final boolean TREE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTree() <em>Tree</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTree()
   * @generated
   * @ordered
   */
  protected boolean tree = TREE_EDEFAULT;

  /**
   * The default value of the '{@link #isExclusiveView() <em>Exclusive View</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExclusiveView()
   * @generated
   * @ordered
   */
  protected static final boolean EXCLUSIVE_VIEW_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExclusiveView() <em>Exclusive View</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExclusiveView()
   * @generated
   * @ordered
   */
  protected boolean exclusiveView = EXCLUSIVE_VIEW_EDEFAULT;

  /**
   * The default value of the '{@link #isListId() <em>List Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isListId()
   * @generated
   * @ordered
   */
  protected static final boolean LIST_ID_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isListId() <em>List Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isListId()
   * @generated
   * @ordered
   */
  protected boolean listId = LIST_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getModel() <em>Model</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModel()
   * @generated
   * @ordered
   */
  protected ClientModel model;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLocation()
   * @generated
   * @ordered
   */
  protected static final boolean LOCATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLocation()
   * @generated
   * @ordered
   */
  protected boolean location = LOCATION_EDEFAULT;

  /**
   * The default value of the '{@link #isStorage() <em>Storage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStorage()
   * @generated
   * @ordered
   */
  protected static final boolean STORAGE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStorage() <em>Storage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStorage()
   * @generated
   * @ordered
   */
  protected boolean storage = STORAGE_EDEFAULT;

  /**
   * The default value of the '{@link #isFromParent() <em>From Parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFromParent()
   * @generated
   * @ordered
   */
  protected static final boolean FROM_PARENT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFromParent() <em>From Parent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFromParent()
   * @generated
   * @ordered
   */
  protected boolean fromParent = FROM_PARENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClientModelAttributeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.CLIENT_MODEL_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNotNull()
  {
    return notNull;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNotNull(boolean newNotNull)
  {
    boolean oldNotNull = notNull;
    notNull = newNotNull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NOT_NULL, oldNotNull, notNull));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isList()
  {
    return list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setList(boolean newList)
  {
    boolean oldList = list;
    list = newList;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST, oldList, list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNoComponent()
  {
    return noComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNoComponent(boolean newNoComponent)
  {
    boolean oldNoComponent = noComponent;
    noComponent = newNoComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NO_COMPONENT, oldNoComponent, noComponent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTree()
  {
    return tree;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTree(boolean newTree)
  {
    boolean oldTree = tree;
    tree = newTree;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TREE, oldTree, tree));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isExclusiveView()
  {
    return exclusiveView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExclusiveView(boolean newExclusiveView)
  {
    boolean oldExclusiveView = exclusiveView;
    exclusiveView = newExclusiveView;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__EXCLUSIVE_VIEW, oldExclusiveView, exclusiveView));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isListId()
  {
    return listId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setListId(boolean newListId)
  {
    boolean oldListId = listId;
    listId = newListId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST_ID, oldListId, listId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClientModel getModel()
  {
    if (model != null && model.eIsProxy())
    {
      InternalEObject oldModel = (InternalEObject)model;
      model = (ClientModel)eResolveProxy(oldModel);
      if (model != oldModel)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL, oldModel, model));
      }
    }
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClientModel basicGetModel()
  {
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModel(ClientModel newModel)
  {
    ClientModel oldModel = model;
    model = newModel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL, oldModel, model));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(boolean newLocation)
  {
    boolean oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LOCATION, oldLocation, location));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isStorage()
  {
    return storage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStorage(boolean newStorage)
  {
    boolean oldStorage = storage;
    storage = newStorage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__STORAGE, oldStorage, storage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFromParent()
  {
    return fromParent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromParent(boolean newFromParent)
  {
    boolean oldFromParent = fromParent;
    fromParent = newFromParent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.CLIENT_MODEL_ATTRIBUTE__FROM_PARENT, oldFromParent, fromParent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NOT_NULL:
        return isNotNull();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST:
        return isList();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NO_COMPONENT:
        return isNoComponent();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TREE:
        return isTree();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__EXCLUSIVE_VIEW:
        return isExclusiveView();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST_ID:
        return isListId();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TYPE:
        return getType();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL:
        if (resolve) return getModel();
        return basicGetModel();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NAME:
        return getName();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LOCATION:
        return isLocation();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__STORAGE:
        return isStorage();
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__FROM_PARENT:
        return isFromParent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NOT_NULL:
        setNotNull((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST:
        setList((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NO_COMPONENT:
        setNoComponent((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TREE:
        setTree((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__EXCLUSIVE_VIEW:
        setExclusiveView((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST_ID:
        setListId((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TYPE:
        setType((String)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL:
        setModel((ClientModel)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NAME:
        setName((String)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LOCATION:
        setLocation((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__STORAGE:
        setStorage((Boolean)newValue);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__FROM_PARENT:
        setFromParent((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NOT_NULL:
        setNotNull(NOT_NULL_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST:
        setList(LIST_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NO_COMPONENT:
        setNoComponent(NO_COMPONENT_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TREE:
        setTree(TREE_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__EXCLUSIVE_VIEW:
        setExclusiveView(EXCLUSIVE_VIEW_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST_ID:
        setListId(LIST_ID_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL:
        setModel((ClientModel)null);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LOCATION:
        setLocation(LOCATION_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__STORAGE:
        setStorage(STORAGE_EDEFAULT);
        return;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__FROM_PARENT:
        setFromParent(FROM_PARENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NOT_NULL:
        return notNull != NOT_NULL_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST:
        return list != LIST_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NO_COMPONENT:
        return noComponent != NO_COMPONENT_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TREE:
        return tree != TREE_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__EXCLUSIVE_VIEW:
        return exclusiveView != EXCLUSIVE_VIEW_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LIST_ID:
        return listId != LIST_ID_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__MODEL:
        return model != null;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__LOCATION:
        return location != LOCATION_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__STORAGE:
        return storage != STORAGE_EDEFAULT;
      case AceGenPackage.CLIENT_MODEL_ATTRIBUTE__FROM_PARENT:
        return fromParent != FROM_PARENT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (notNull: ");
    result.append(notNull);
    result.append(", list: ");
    result.append(list);
    result.append(", noComponent: ");
    result.append(noComponent);
    result.append(", tree: ");
    result.append(tree);
    result.append(", exclusiveView: ");
    result.append(exclusiveView);
    result.append(", listId: ");
    result.append(listId);
    result.append(", type: ");
    result.append(type);
    result.append(", name: ");
    result.append(name);
    result.append(", location: ");
    result.append(location);
    result.append(", storage: ");
    result.append(storage);
    result.append(", fromParent: ");
    result.append(fromParent);
    result.append(')');
    return result.toString();
  }

} //ClientModelAttributeImpl
