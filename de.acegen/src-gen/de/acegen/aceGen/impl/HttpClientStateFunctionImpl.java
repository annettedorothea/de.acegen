/**
 * generated by Xtext 2.26.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.ClientAttribute;
import de.acegen.aceGen.HttpClientStateFunction;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Http Client State Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientStateFunctionImpl#getStateFunctionType <em>State Function Type</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.HttpClientStateFunctionImpl#getStateElement <em>State Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HttpClientStateFunctionImpl extends MinimalEObjectImpl.Container implements HttpClientStateFunction
{
  /**
   * The default value of the '{@link #getStateFunctionType() <em>State Function Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateFunctionType()
   * @generated
   * @ordered
   */
  protected static final String STATE_FUNCTION_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStateFunctionType() <em>State Function Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateFunctionType()
   * @generated
   * @ordered
   */
  protected String stateFunctionType = STATE_FUNCTION_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getStateElement() <em>State Element</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateElement()
   * @generated
   * @ordered
   */
  protected ClientAttribute stateElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HttpClientStateFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.HTTP_CLIENT_STATE_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStateFunctionType()
  {
    return stateFunctionType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStateFunctionType(String newStateFunctionType)
  {
    String oldStateFunctionType = stateFunctionType;
    stateFunctionType = newStateFunctionType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_FUNCTION_TYPE, oldStateFunctionType, stateFunctionType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ClientAttribute getStateElement()
  {
    if (stateElement != null && stateElement.eIsProxy())
    {
      InternalEObject oldStateElement = (InternalEObject)stateElement;
      stateElement = (ClientAttribute)eResolveProxy(oldStateElement);
      if (stateElement != oldStateElement)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT, oldStateElement, stateElement));
      }
    }
    return stateElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClientAttribute basicGetStateElement()
  {
    return stateElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStateElement(ClientAttribute newStateElement)
  {
    ClientAttribute oldStateElement = stateElement;
    stateElement = newStateElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT, oldStateElement, stateElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_FUNCTION_TYPE:
        return getStateFunctionType();
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT:
        if (resolve) return getStateElement();
        return basicGetStateElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_FUNCTION_TYPE:
        setStateFunctionType((String)newValue);
        return;
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT:
        setStateElement((ClientAttribute)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_FUNCTION_TYPE:
        setStateFunctionType(STATE_FUNCTION_TYPE_EDEFAULT);
        return;
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT:
        setStateElement((ClientAttribute)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_FUNCTION_TYPE:
        return STATE_FUNCTION_TYPE_EDEFAULT == null ? stateFunctionType != null : !STATE_FUNCTION_TYPE_EDEFAULT.equals(stateFunctionType);
      case AceGenPackage.HTTP_CLIENT_STATE_FUNCTION__STATE_ELEMENT:
        return stateElement != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (stateFunctionType: ");
    result.append(stateFunctionType);
    result.append(')');
    return result.toString();
  }

} //HttpClientStateFunctionImpl
