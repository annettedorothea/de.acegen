/**
 * generated by Xtext 2.27.0
 */
package de.acegen.aceGen.impl;

import de.acegen.aceGen.AceGenPackage;
import de.acegen.aceGen.LongType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Long Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.acegen.aceGen.impl.LongTypeImpl#isMinus <em>Minus</em>}</li>
 *   <li>{@link de.acegen.aceGen.impl.LongTypeImpl#getLong <em>Long</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LongTypeImpl extends JsonValueClientImpl implements LongType
{
  /**
   * The default value of the '{@link #isMinus() <em>Minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMinus()
   * @generated
   * @ordered
   */
  protected static final boolean MINUS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMinus() <em>Minus</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMinus()
   * @generated
   * @ordered
   */
  protected boolean minus = MINUS_EDEFAULT;

  /**
   * The default value of the '{@link #getLong() <em>Long</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLong()
   * @generated
   * @ordered
   */
  protected static final int LONG_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLong() <em>Long</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLong()
   * @generated
   * @ordered
   */
  protected int long_ = LONG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LongTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AceGenPackage.Literals.LONG_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isMinus()
  {
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinus(boolean newMinus)
  {
    boolean oldMinus = minus;
    minus = newMinus;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.LONG_TYPE__MINUS, oldMinus, minus));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLong()
  {
    return long_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLong(int newLong)
  {
    int oldLong = long_;
    long_ = newLong;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AceGenPackage.LONG_TYPE__LONG, oldLong, long_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AceGenPackage.LONG_TYPE__MINUS:
        return isMinus();
      case AceGenPackage.LONG_TYPE__LONG:
        return getLong();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AceGenPackage.LONG_TYPE__MINUS:
        setMinus((Boolean)newValue);
        return;
      case AceGenPackage.LONG_TYPE__LONG:
        setLong((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.LONG_TYPE__MINUS:
        setMinus(MINUS_EDEFAULT);
        return;
      case AceGenPackage.LONG_TYPE__LONG:
        setLong(LONG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AceGenPackage.LONG_TYPE__MINUS:
        return minus != MINUS_EDEFAULT;
      case AceGenPackage.LONG_TYPE__LONG:
        return long_ != LONG_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (minus: ");
    result.append(minus);
    result.append(", long: ");
    result.append(long_);
    result.append(')');
    return result.toString();
  }

} //LongTypeImpl
